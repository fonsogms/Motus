{"version":3,"sources":["components/Navbar.js","services/api.js","components/Signup.js","components/Login.js","components/Content-Dashboard/ContentDashCard.js","components/Content-Dashboard/ContentManager.js","components/Content-Dashboard/AddContent.js","components/Post.js","components/Content-Dashboard/EditContent.js","components/face-api/FaceApi.js","components/UserViews/DisplayPost.js","components/UserViews/DetectEmotion.js","components/UserViews/UserCard.js","components/UserViews/CreatorPage.js","components/ContentInfo.js","components/Chart.js","components/Header.js","components/ProfileSettings/EditProfile.js","components/ProfileSettings/Settings.js","App.js","serviceWorker.js","index.js"],"names":["handleLogout","props","axios","delete","then","response","data","catch","err","setUser","Navbar","console","log","className","to","src","style","height","user","username","onClick","class","fullName","marginTop","Signup","useState","setUsername","password","setPassword","message","setMessage","setFullName","onSubmit","e","preventDefault","post","signup","history","push","label","validate","group","error","success","type","name","id","value","onChange","target","Login","login","ContentDashCard","state","textToCopy","componentDidMount","content","_id","setState","handleClick","event","Axios","getData","this","title","date","textDecoration","color","navigator","clipboard","writeText","width","Component","ContentManager","get","contentArr","setTextToCopy","filled","length","textAlign","reverse","map","el","key","AddContent","urlPath","setUrlPath","setTitle","contentType","setContentType","enctype","setEnctype","body","setBody","formInfo","image","audio","video","text","encType","htmlFor","files","uploadData","FormData","append","secure_url","aria-describedby","Post","useEffect","unique","match","params","owner","goBack","EditContent","setId","editPost","put","median","values","sort","a","b","half","Math","floor","hidden","visibilityChange","document","msHidden","webkitHidden","FaceApi","actions","handleVisibilityChange","dataManager","clearInterval","myDetection","webcam","MaxAndAvg","getTime","timeSessionCalculation","faceDetection","angry","angryMaxValue","angryAvgValue","disgusted","disgustedMaxValue","disgustedAvgValue","fearful","fearfulMaxValue","fearfulAvgValue","happy","happyMaxValue","happyAvgValue","neutral","neutralMaxValue","neutralAvgValue","sad","sadMaxValue","sadAvgValue","surprised","surprisedMaxValue","surprisedAvgValue","age","ceil","gender","time","fullTime","min","sec","detectionValues","timeElapsed","timeSession","currTime","Date","toString","split","day","month","year","hour","minStart","parseInt","secStart","minEnd","secEnd","angryValues","disgustedValues","fearfulValues","happyValues","neutralValues","sadValues","surprisedValues","ageValues","genderValues","maleCount","femaleCount","exactGender","forEach","x","max","ageArray","genderArray","maleNum","femaleNum","getElementById","getUserMedia","stream","srcObject","getVideoTracks","stop","faceApi","Promise","all","faceapi","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","ageGenderNet","addEventListener","canvas","displaySize","setInterval","withFaceLandmarks","withFaceExpressions","withAgeAndGender","withFaceDescriptors","undefined","detections","expressions","componentWillUnmount","removeEventListener","onBeforeunload","autoPlay","muted","DisplayPost","url","controls","views","viewId","contentId","setContentId","setOwner","ownerId","setOwnerId","setViewId","viewTotal","setViewTotal","newId","created","UserCard","CreatorPage","setContent","contentData","Chart","viewsData","allAvg","elem","index","averageEmotion","neutralityArr","neutralAvg","emotionalImpact","reduce","acum","val","toFixed","getEmotion","emotion","acc","curr","ageAverage","sum","genderArr","male","filter","emotionsCount","chartData","malePercent","femalePercent","viewsArr","maxEmotion","getAverage","array","previous","current","labels","datasets","backgroundColor","options","maintainAspectRatio","display","justifyContent","Header","pointerEvents","frameBorder","allowFullScreen","fontSize","EditProfile","handleSubmit","onImageUpload","oldPasswordTest","newPasswordTest","Settings","profilePicture","App","exact","path","render","component","DetectEmotion","React","Boolean","window","location","hostname","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"0VAKMA,EAAe,SAAAC,GCqBZC,IACJC,OAAO,oBACPC,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GACL,OAAOA,EAAIH,SAASC,QD1BfF,MAAK,WACZH,EAAMQ,QAAQ,UAkDHC,EA9CA,SAAAT,GAEb,OADAU,QAAQC,IAAI,WAAYX,GAEtB,yBAAKY,UAAU,iEACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAChC,yBAAKC,IAAI,kBAAkBC,MAAO,CAAEC,OAAQ,WAG7ChB,EAAMiB,KACL,oCACE,kBAAC,IAAD,CAAML,UAAU,eAAeC,GAAG,sBAAlC,WAGA,kBAAC,IAAD,CAAMD,UAAU,eAAeC,GAAE,kBAAab,EAAMiB,KAAKC,WAAzD,aAGA,kBAAC,IAAD,CACEN,UAAU,oCACVC,GAAG,IACHM,QAAS,kBAAMpB,EAAaC,KAE5B,uBAAGoB,MAAM,yBACH,KAGV,oCACE,kBAAC,IAAD,CAAMR,UAAU,oCAAoCC,GAAG,WAAvD,UAGA,kBAAC,IAAD,CAAMD,UAAU,oCAAoCC,GAAG,UACrD,uBAAGO,MAAM,yBAIdpB,EAAMiB,MACL,wBAAIL,UAAU,gCAAd,OACOZ,EAAMiB,KAAKI,UAGpB,kBAAC,IAAD,CAAMN,MAAO,CAAEO,UAAW,OAAST,GAAG,aACpC,uBAAGO,MAAM,mC,cE2CFG,EA9EA,SAAAvB,GAAU,IAAD,EACUwB,mBAAS,IADnB,mBACfN,EADe,KACLO,EADK,OAEUD,mBAAS,IAFnB,mBAEfE,EAFe,KAELC,EAFK,OAGQH,mBAAS,IAHjB,mBAGfI,EAHe,KAGNC,EAHM,OAIUL,mBAAS,IAJnB,mBAIfH,EAJe,KAILS,EAJK,KAkBtB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,wBAAIlB,UAAU,0BAAd,WACA,0BAAMmB,SAlBK,SAAAC,GACnBA,EAAEC,iBDrBS,SAACf,EAAUQ,EAAUL,GAClC,OAAOpB,IACJiC,KAAK,mBAAoB,CAAEhB,WAAUQ,WAAUL,aAC/ClB,MAAK,SAAAC,GAEJ,OADAM,QAAQC,IAAI,oCAAqCP,EAASC,MACnDD,EAASC,QAEjBC,OAAM,SAAAC,GACL,OAAOA,EAAIH,SAASC,QCctB8B,CAAOjB,EAAUQ,EAAUL,GAAUlB,MAAK,SAAAE,GACpCA,EAAKuB,QACPC,EAAWxB,EAAKuB,UAEhB5B,EAAMQ,QAAQH,GACdL,EAAMoC,QAAQC,KAAK,4BAYb,yBAAKzB,UAAU,aAEb,kBAAC,IAAD,CACE0B,MAAM,WACNC,UAAQ,EACRC,OAAK,EACLC,MAAM,QACNC,QAAQ,QACRC,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,MAAO5B,EACP6B,SAAU,SAAAf,GAAC,OAAIP,EAAYO,EAAEgB,OAAOF,UAGtC,kBAAC,IAAD,CACER,MAAM,OACNC,UAAQ,EACRC,OAAK,EACLC,MAAM,QACNC,QAAQ,QACRC,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,MAAOzB,EACP0B,SAAU,SAAAf,GAAC,OAAIF,EAAYE,EAAEgB,OAAOF,UAGtC,kBAAC,IAAD,CACER,MAAM,WACNC,UAAQ,EACRC,OAAK,EACLC,MAAM,QACNC,QAAQ,QACRC,KAAK,WACLC,KAAK,WACLC,GAAG,WACHC,MAAOpB,EACPqB,SAAU,SAAAf,GAAC,OAAIL,EAAYK,EAAEgB,OAAOF,WAGvClB,GAAW,4BAAKA,GACjB,yBAAKhB,UAAU,eACb,kBAAC,IAAD,CAAQ+B,KAAK,UAAb,yB,QCJDM,EAjED,SAAAjD,GAAU,IAAD,EACWwB,mBAAS,IADpB,mBACdN,EADc,KACJO,EADI,OAEWD,mBAAS,IAFpB,mBAEdE,EAFc,KAEJC,EAFI,OAGSH,mBAAS,IAHlB,mBAGdI,EAHc,KAGLC,EAHK,KAiBrB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,wBAAIjB,UAAU,2BAAd,UACA,0BAAMmB,SAlBK,SAAAC,GACnBA,EAAEC,iBFPQ,SAACf,EAAUQ,GACvB,OAAOzB,IACJiC,KAAK,kBAAmB,CAAEhB,WAAUQ,aACpCvB,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GACL,OAAOA,EAAIH,SAASC,QECtB6C,CAAMhC,EAAUQ,GAAUvB,MAAK,SAAAE,GACzBA,EAAKuB,QACPC,EAAWxB,EAAKuB,UAEhB5B,EAAMQ,QAAQH,GACdL,EAAMoC,QAAQC,KAAK,mBAYb,yBAAKzB,UAAU,aAEb,kBAAC,IAAD,CACE0B,MAAM,WACNC,UAAQ,EACRC,OAAK,EACLC,MAAM,QACNC,QAAQ,QACRC,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,MAAO5B,EACP6B,SAAU,SAAAf,GAAC,OAAIP,EAAYO,EAAEgB,OAAOF,UAGtC,kBAAC,IAAD,CACER,MAAM,WACNC,UAAQ,EACRC,OAAK,EACLC,MAAM,QACNC,QAAQ,QACRC,KAAK,WACLC,KAAK,WACLC,GAAG,WACHC,MAAOpB,EACPqB,SAAU,SAAAf,GAAC,OAAIL,EAAYK,EAAEgB,OAAOF,WAGvClB,GAAW,4BAAKA,GAEjB,yBAAKhB,UAAU,eACb,kBAAC,IAAD,CAAQ+B,KAAK,UAAb,gBCxDKQ,E,2MACnBC,MAAQ,CACNC,WAAY,I,EAGdC,kBAAoB,WAClB,IAAMT,EAAK,EAAK7C,MAAMuD,QAAQC,IACxBvC,EAAO,EAAKjB,MAAMiB,KAAKC,SAC7B,EAAKuC,SAAS,CACZJ,WAAW,2BAAD,OAA6BpC,EAA7B,YAAqC4B,M,EAInDa,YAAc,SAAAC,GAEZ,OADAA,EAAM1B,iBACC2B,IAAM1D,OAAN,uBAA6B,EAAKF,MAAMuD,QAAQC,MAAOrD,MAC5D,SAAAC,GAEE,EAAKJ,MAAM6D,c,wEAIP,IAAD,OACP,OACE,yBAAKjD,UAAU,cACb,yBAAKA,UAAU,eACb,4BAAKkD,KAAK9D,MAAMuD,QAAQQ,OACxB,4BAAKD,KAAK9D,MAAMuD,QAAQS,MAExB,kBAAC,IAAD,CACEjD,MAAO,CAAEkD,eAAgB,OAAQC,MAAO,SACxCrD,GAAE,6BAAwBiD,KAAK9D,MAAMuD,QAAQC,MAE7C,uBAAG5C,UAAU,sBAKf,kBAAC,IAAD,CACEG,MAAO,CAAEkD,eAAgB,OAAQC,MAAO,SACxCrD,GAAE,gBAAWiD,KAAK9D,MAAMuD,QAAQC,MAEhC,uBAAG5C,UAAU,uBAIf,uBAAGA,UAAU,yBAAyBO,QAAS2C,KAAKJ,cAGpD,uBACE9C,UAAU,4BACVO,QAAS,kBAAMgD,UAAUC,UAAUC,UAAU,EAAKjB,MAAMC,eAG1D,kBAAC,IAAD,CAAMxC,GAAE,aAAQiD,KAAK9D,MAAMiB,KAAKC,SAAxB,YAAoC4C,KAAK9D,MAAMuD,QAAQC,MAC5D,IADH,mBAKF,wBAAIc,MAAM,a,GA3D2BC,aCTxBC,E,2MACnBpB,MAAQ,CACNnC,KAAM,EAAKjB,MAAMiB,KACjBsC,QAAS,GACTF,WAAY,I,EAGdC,kBAAoB,WAClB,EAAKO,W,EAGPA,QAAU,WACRD,IAAMa,IAAI,gBAAgBtE,MAAK,SAAAuE,GAC7B,EAAKjB,SAAS,CACZF,QAASmB,EAAWrE,W,EAK1BsE,cAAgB,SAAA9B,GAAO,IACb3B,EAAa,EAAKkC,MAAMnC,KAAKC,SAA7BA,SACR,EAAKuC,SAAS,CACZJ,WAAW,2BAAD,OAA6BnC,EAA7B,YAAyC2B,KAErDsB,UAAUC,UAAUC,UAAU,EAAKjB,MAAMC,a,wEAGjC,IAAD,SAEmBS,KAAKV,MAAvBnC,EAFD,EAECA,KACF2D,EAA4B,IAH3B,EAEOrB,QACSsB,QAAuB,YAE9C,OAAK5D,EAGH,oCACE,6BACE,wBAAIF,MAAO,CAAE+D,UAAW,UAAYlE,UAAU,SAA9C,wBAIA,8BACEgE,GAAU,6CACXd,KAAKV,MAAMG,QAAQwB,UAAUC,KAAI,SAAAC,GAChC,OACE,yBAAKrE,UAAU,wBACb,kBAAC,EAAD,CACE2C,QAAS0B,EACTpB,QAAS,EAAKA,QACdqB,IAAKD,EAAGzB,IACRvC,KAAM,EAAKmC,MAAMnC,YAM3B,yBAAKL,UAAU,uBACb,kBAAC,IAAD,CAAMC,GAAG,0BACP,uBAAGD,UAAU,6CA1BH,kF,GAhCsB2D,aCyM7BY,EAjMI,SAAAnF,GAAU,IAAD,EACIwB,mBAAS,IADb,mBACnB4D,EADmB,KACVC,EADU,OAEA7D,mBAAS,IAFT,mBAEnBuC,EAFmB,KAEZuB,EAFY,OAGY9D,mBAAS,SAHrB,mBAGnB+D,EAHmB,KAGNC,EAHM,OAIIhE,oBAAS,GAJb,mBAInBiE,EAJmB,KAIVC,EAJU,OAKFlE,mBAAS,IALP,mBAKnBmE,EALmB,KAKbC,EALa,OAMIpE,mBAAS,IANb,mBAMnBI,EANmB,KAMVC,EANU,KA2EpBgE,EAAWJ,EAAU,sBAAwB,GAC7CK,EAAwB,UAAhBP,EACRQ,EAAwB,UAAhBR,EACRS,EAAwB,UAAhBT,EACRU,EAAuB,SAAhBV,EAEb,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,0BAAMxD,SA5DK,SAAA4B,GACnBA,EAAM1B,iBAEFmD,GAAWrB,GAASwB,GAAeI,GACrCjF,QAAQC,IAAIyE,GACZnF,IACGiC,KAAK,mBAAoB,CACxBkD,UACArB,QACAwB,cACAI,SAEDxF,MAAK,WACJH,EAAMoC,QAAQC,KAAK,0BAGvBR,EAAW,mCA4CyBqE,QAASL,GACrC,2BAAOjF,UAAU,qBAAqBuF,QAAQ,SAA9C,SAGA,kBAAC,IAAD,CACE7D,MAAM,GACNK,KAAK,OACLC,KAAK,QACLC,GAAG,QACHC,MAAOiB,EACPhB,SAAU,SAAAf,GAAC,OAAIsD,EAAStD,EAAEgB,OAAOF,UAEnC,2BAAOlC,UAAU,qBAAqBuF,QAAQ,eAA9C,gBAGA,4BACEvF,UAAU,gCACViC,GAAG,cACHD,KAAK,cACLE,MAAOyC,EACPxC,SAjGO,SAAAY,GACnBjD,QAAQC,IAAR,mBAAgCgD,EAAMX,OAAOF,OADjB,IAEpBA,EAAUa,EAAMX,OAAhBF,MACRpC,QAAQC,WAAWmC,EAAOA,IAAUa,EAAMX,OAAOF,OACnC,SAAVA,GACF0C,EAAe1C,GACfjB,EAAW,iDACQ,UAAViB,GACT0C,EAAe1C,GACf4C,GAAW,KAEXF,EAAe1C,GACfjB,EAAW,OAuFD,4BAAQiB,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,UAEDgD,GACC,oCACE,2BAAOlF,UAAU,qBAAqBuF,QAAQ,QAA9C,qBAGA,yBAAKvF,UAAU,eACb,yBAAKA,UAAU,eACb,2BACE+B,KAAK,OACLC,KAAK,UACLC,GAAG,UACHE,SA7EA,SAAAY,GACpBjD,QAAQC,IAAI,0BAA2BgD,EAAMX,OAAOoD,MAAM,IAE1D,IAAMA,EAAQzC,EAAMX,OAAOoD,MAAM,GAC3BC,EAAa,IAAIC,SAGvBD,EAAWE,OAAO,UAAWH,GAC7BnG,IAAMiC,KAAK,yBAA0BmE,GAAYlG,MAAK,SAAAC,GACpD,IAAMgF,EAAUhF,EAASC,KAAKmG,WAC9BnB,EAAWD,OAoEOxE,UAAU,oBACV6F,mBAAiB,0BAEnB,2BACE7F,UAAU,8BACVuF,QAAQ,QAFV,gBAOF,yBAAKrF,IAAKsE,MAUfW,GACC,oCACE,2BAAOnF,UAAU,qBAAqBuF,QAAQ,QAA9C,qBAGA,kBAAC,IAAD,CACExD,KAAK,OACLC,KAAK,UACLC,GAAG,UACHE,SA7FI,SAAAY,GACpBjD,QAAQC,IAAI,0BAA2BgD,EAAMX,OAAOoD,MAAM,IAE1D,IAAMA,EAAQzC,EAAMX,OAAOoD,MAAM,GAC3BC,EAAa,IAAIC,SAGvBD,EAAWE,OAAO,UAAWH,GAC7BnG,IAAMiC,KAAK,yBAA0BmE,GAAYlG,MAAK,SAAAC,GACpD,IAAMgF,EAAUhF,EAASC,KAAKmG,WAC9BnB,EAAWD,UAuFFY,GACC,oCACE,2BAAOG,QAAQ,QAAf,2BACA,kBAAC,IAAD,CACExD,KAAK,OACLC,KAAK,UACLC,GAAG,UACHE,SAAU,SAAAf,GAAC,OAAIqD,EAAWrD,EAAEgB,OAAOF,QACnCA,MAAOsC,KAIZa,GAAQ,6BAAMrE,GACf,2BAAOuE,QAAQ,QAAf,qBACA,kBAAC,IAAD,CACEvD,KAAK,OACLC,GAAG,OACHF,KAAK,OACLG,MAAO6C,EACP5C,SAAU,SAAAf,GAAC,OAAI4D,EAAQ5D,EAAEgB,OAAOF,WAEhCmD,GACA,yBAAKrF,UAAU,eACb,kBAAC,IAAD,CAAQ+B,KAAK,UAAb,WAGHf,QChIA8E,EAhEF,SAAA1G,GAAU,IAAD,EACMwB,mBAAS,IADf,mBACbuC,EADa,KACNuB,EADM,OAEI9D,mBAAS,IAFb,mBAEbmE,EAFa,KAEPC,EAFO,OAKYpE,mBAAS,IALrB,mBAKHM,GALG,aAMgBN,mBAAS,IANzB,mBAMb6B,EANa,KAMDsB,EANC,KA8CpB,OAjBAgC,qBAAU,WAAO,IACPC,EAAW5G,EAAM6G,MAAMC,OAAvBF,OACR3G,IAAMwE,IAAN,uBAA0BmC,IAAUzG,MAAK,SAAAC,GACvC,IAAM8B,EAAO9B,EAASC,KACd0D,EAAgB7B,EAAhB6B,MAAO4B,EAASzD,EAATyD,KACT9C,EAAKX,EAAKsB,IACVuD,EAAQ7E,EAAK6E,MAAM7F,SACjBG,EAAaa,EAAK6E,MAAlB1F,SACRiE,EAASvB,GACT6B,EAAQD,GAGR7D,EAAYT,GACZsD,EAAc,2BAAD,OAA4BoC,EAA5B,YAAqClE,SAEnD,IAGD,6BACE,4BAAQ1B,QAAS,kBAAMnB,EAAMoC,QAAQ4E,WACnC,uBAAG5F,MAAM,6BAEX,4BAAK2C,GACL,2BAAI4B,GACJ,4BACExE,QAAS,WACPgD,UAAUC,UAAUC,UAAUhB,KAFlC,wDC8BS4D,EA3EK,SAAAjH,GAAU,IAAD,EACDwB,mBAAS,IADR,mBACpBuC,EADoB,KACbuB,EADa,OAEH9D,mBAAS,IAFN,mBAEpBmE,EAFoB,KAEdC,EAFc,OAGPpE,mBAAS,IAHF,mBAGpBqB,EAHoB,KAGhBqE,EAHgB,KAmC3B,OAZAP,qBAAU,WAAM,IAENQ,EAAanH,EAAM6G,MAAMC,OAAzBK,SACRlH,IAAMwE,IAAN,uBAA0B0C,IAAYhH,MAAK,SAAA+B,GACzC,IAAMW,EAAKX,EAAK7B,KAAKmD,IAD4B,EAEzBtB,EAAK7B,KAArB0D,EAFyC,EAEzCA,MAAO4B,EAFkC,EAElCA,KACfL,EAASvB,GACT6B,EAAQD,GACRuB,EAAMrE,QAEP,IAGD,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,0BAAMd,SAxBK,SAAAC,GACnBA,EAAEC,iBACFhC,IAAMmH,IAAN,uBAA0BvE,GAAM,CAAEkB,QAAO4B,SAAQxF,MAAK,WACpDH,EAAMoC,QAAQC,KAAK,2BAsBX,yBAAKzB,UAAU,gBACb,2BAAOA,UAAU,qBAAqBuF,QAAQ,SAA9C,SAGA,kBAAC,IAAD,CACExD,KAAK,OACLE,GAAG,QACHD,KAAK,QACLE,MAAOiB,EACPhB,SAAU,SAAAf,GAAC,OAAIsD,EAAStD,EAAEgB,OAAOF,UAGnC,2BAAOlC,UAAU,eAAeuF,QAAQ,QAAxC,eAGA,kBAAC,IAAD,CACExD,KAAK,OACLE,GAAG,OACHD,KAAK,OACLE,MAAO6C,EACP5C,SAAU,SAAAf,GAAC,OAAI4D,EAAQ5D,EAAEgB,OAAOF,UAElC,yBAAKlC,UAAU,eACb,kBAAC,IAAD,CAAQ+B,KAAK,UAAb,gB,kDCvEZ0E,EAAS,SAAAC,GACb,GAAsB,IAAlBA,EAAOzC,OAAc,OAAO,EAEhCyC,EAAOC,MAAK,SAACC,EAAGC,GACd,OAAOD,EAAIC,KAGb,IAAIC,EAAOC,KAAKC,MAAMN,EAAOzC,OAAS,GAEtC,OAAIyC,EAAOzC,OAAS,EAAUyC,EAAOI,IAE7BJ,EAAOI,EAAO,GAAKJ,EAAOI,IAAS,GAKzCG,EAAS,KACTC,EAAmB,KACQ,qBAApBC,SAASF,QAElBA,EAAS,SACTC,EAAmB,oBACmB,qBAAtBC,SAASC,UACzBH,EAAS,WACTC,EAAmB,sBACuB,qBAA1BC,SAASE,eACzBJ,EAAS,eACTC,EAAmB,0B,IAIAI,E,2MAEnB9E,MAAQ,CACN+E,QAAS,I,EAGXC,uBAAyB,WACnBL,SAASF,GACX,EAAKpE,SAAS,CAAE0E,QAAQ,GAAD,mBAAM,EAAK/E,MAAM+E,SAAjB,CAA0B,WAEjD,EAAK1E,SAAS,CAAE0E,QAAQ,GAAD,mBAAM,EAAK/E,MAAM+E,SAAjB,CAA0B,Y,EAKrDE,YAAc,WACZC,cAAc,EAAKC,aACnB,EAAKC,SAGL,IAAMlB,EAAS,EAAKmB,YACdC,EAAU,EAAKC,yBAEjBC,EAAgB,CAClBC,MAAO,CAACvB,EAAOwB,cAAexB,EAAOyB,eACrCC,UAAW,CAAC1B,EAAO2B,kBAAmB3B,EAAO4B,mBAC7CC,QAAS,CAAC7B,EAAO8B,gBAAiB9B,EAAO+B,iBACzCC,MAAO,CAAChC,EAAOiC,cAAejC,EAAOkC,eACrCC,QAAS,CAACnC,EAAOoC,gBAAiBpC,EAAOqC,iBACzCC,IAAK,CAACtC,EAAOuC,YAAavC,EAAOwC,aACjCC,UAAW,CAACzC,EAAO0C,kBAAmB1C,EAAO2C,mBAC7CC,IAAKvC,KAAKwC,KAAK7C,EAAO4C,KACtBE,OAAQ9C,EAAO8C,OACfC,KAAM,CACJC,SAAUhD,EAAO+C,KACjBE,IAAK7B,EAAQ6B,IACbC,IAAK9B,EAAQ8B,MAIjB9J,QAAQC,IAAI,yBAA0BiI,GACtClI,QAAQC,IAAI,6BAA8B2G,GAG1CrH,IACGmH,IADH,qBACqB,EAAKpH,MAAM6C,IAAM+F,GACnCzI,MAAK,SAAAsK,GACJ/J,QAAQC,IAAI8J,MAEbnK,OAAM,SAAAC,GACLG,QAAQC,IAAIJ,O,EAKlBmK,YAAc,G,EAEdC,YAAc,WACZ,IAAIC,EAEA5G,GAAO,IAAI6G,MAAOC,WAAWC,MAAM,KACnCC,EAAMhH,EAAK,GACXiH,EAAQjH,EAAK,GACbkH,EAAOlH,EAAK,GACZqG,EAAOrG,EAAK,GAAG8G,WAAWC,MAAM,IAGhCI,EAAOd,EAAK,GAAKA,EAAK,GACtBE,EAAMF,EAAK,GAAKA,EAAK,GACrBG,EAAMH,EAAK,GAAKA,EAAK,GAIzB,OAHAO,EAAQ,UAAMI,EAAN,YAAaC,EAAb,YAAsBC,EAAtB,YAA8BC,EAA9B,YAAsCZ,EAAtC,YAA6CC,GAEnC,EAAKE,YAAYrI,KAAKuI,I,EAI1CjC,uBAAyB,WACvB,IAAIyC,EAAWC,SAAS,EAAKX,YAAY,GAAGK,MAAM,KAAK,GAAGA,MAAM,KAAK,IACjEO,EAAWD,SAAS,EAAKX,YAAY,GAAGK,MAAM,KAAK,GAAGA,MAAM,KAAK,IACjEQ,EAASF,SAAS,EAAKX,YAAY,GAAGK,MAAM,KAAK,GAAGA,MAAM,KAAK,IAC/DS,EAASH,SAAS,EAAKX,YAAY,GAAGK,MAAM,KAAK,GAAGA,MAAM,KAAK,IAanE,MAAO,CAAER,IAVAgB,EAASH,EAUUZ,IAPtBe,EAASH,EAAW,EACR,GAAKE,EACFE,EAEVA,EAASF,I,EAStBG,YAAc,G,EACdC,gBAAkB,G,EAClBC,cAAgB,G,EAChBC,YAAc,G,EACdC,cAAgB,G,EAChBC,UAAY,G,EACZC,gBAAkB,G,EAClBC,UAAY,G,EACZC,aAAe,G,EAGfC,UAAY,E,EACZC,YAAc,E,EAEdC,YAAc,SAAAhC,GASZ,OARAA,GACEA,EAAOiC,SAAQ,SAAAC,GACH,SAANA,EACF,EAAKJ,YACU,WAANI,GACT,EAAKH,iBAGP,EAAKD,UAAY,EAAKC,YACjB,OACE,EAAKA,YAAc,EAAKD,UAC1B,SAEA,I,EAKXzD,UAAY,WACV,MAAO,CACLK,cAAenB,KAAK4E,IAAL,MAAA5E,KAAI,YAAQ,EAAK8D,cAChCxC,kBAAmBtB,KAAK4E,IAAL,MAAA5E,KAAI,YAAQ,EAAK+D,kBACpCtC,gBAAiBzB,KAAK4E,IAAL,MAAA5E,KAAI,YAAQ,EAAKgE,gBAClCpC,cAAe5B,KAAK4E,IAAL,MAAA5E,KAAI,YAAQ,EAAKiE,cAChClC,gBAAiB/B,KAAK4E,IAAL,MAAA5E,KAAI,YAAQ,EAAKkE,gBAClChC,YAAalC,KAAK4E,IAAL,MAAA5E,KAAI,YAAQ,EAAKmE,YAC9B9B,kBAAmBrC,KAAK4E,IAAL,MAAA5E,KAAI,YAAQ,EAAKoE,kBACpChD,cAAe1B,EAAO,EAAKoE,aAE3BvC,kBAAmB7B,EAAO,EAAKqE,iBAG/BrC,gBAAiBhC,EAAO,EAAKsE,eAG7BnC,cAAenC,EAAO,EAAKuE,aAE3BjC,gBAAiBtC,EAAO,EAAKwE,eAG7B/B,YAAazC,EAAO,EAAKyE,WAEzB7B,kBAAmB5C,EAAO,EAAK0E,iBAG/B7B,IAAK7C,EAAO,EAAK2E,WACjBQ,SAAU,EAAKR,UAIf5B,OAAQ,EAAKgC,YAAY,EAAKH,cAC9BQ,YAAa,EAAKR,aAClBS,QAAS,EAAKR,UACdS,UAAW,EAAKR,YAChB9B,KAAM,EAAKK,c,EAKfnC,YAAc,E,EAGdC,OAAS,WACP,IAAMxC,EAAQ+B,SAAS6E,eAAe,SACtCzI,UAAU0I,aACR,CAAE7G,MAAO,KACT,SAAA8G,GAAM,OACH9G,EAAM+G,UAAYD,EAAOE,iBAAiBX,SAAQ,SAAAC,GAAC,OAAIA,EAAEW,aAC5D,SAAA1M,GAAG,OAAIG,QAAQ+B,MAAMlC,O,EAKzB2M,QAAU,WACR,IAAMlH,EAAQ+B,SAAS6E,eAAe,SAGtCO,QAAQC,IAAI,CACVC,IAAaC,iBAAiBC,YAAY,WAC1CF,IAAaG,kBAAkBD,YAAY,WAC3CF,IAAaI,mBAAmBF,YAAY,WAC5CF,IAAaK,kBAAkBH,YAAY,WAC3CF,IAAaM,aAAaJ,YAAY,aACrCpN,MAIH,WACEgE,UAAU0I,aACR,CAAE7G,MAAO,KACT,SAAA8G,GAAM,OAAK9G,EAAM+G,UAAYD,KAC7B,SAAAvM,GAAG,OAAIG,QAAQ+B,MAAMlC,SAKzByF,EAAM4H,iBAAiB,OAAvB,sBAA+B,8BAAApG,EAAA,sEACR6F,IAA8BrH,GADtB,cACvB6H,EADuB,OAE7B9F,SAASpC,KAAKY,OAAOsH,GACfC,EAAc,CAAExJ,MAAO0B,EAAM1B,MAAOtD,OAAQgF,EAAMhF,QAH3B,SAIvBqM,IAAwBQ,EAAQC,GAJT,OAK7BpN,QAAQC,IAAI,iBAEZ,EAAK4H,YAAcwF,YAAW,sBAAC,4BAAAvG,EAAA,sEACJ6F,IACPrH,EAAO,IAAIqH,KAC1BW,oBACAC,sBACAC,mBACAC,sBAN0B,YAQPC,KAPhBC,EADuB,QAQd,GACb3N,QAAQC,IAAI,wBACH0N,EAAW,GAAGC,cACvB5N,QAAQC,IAAI,uBACR0N,EAAW,GAAGC,YAAYzF,OAG5B,EAAK4C,YAAYpJ,KAAKgM,EAAW,GAAGC,YAAYzF,OAE9CwF,EAAW,GAAGC,YAAYtF,WAG5B,EAAK0C,gBAAgBrJ,KAAKgM,EAAW,GAAGC,YAAYtF,WAElDqF,EAAW,GAAGC,YAAYnF,SAG5B,EAAKwC,cAActJ,KAAKgM,EAAW,GAAGC,YAAYnF,SAEhDkF,EAAW,GAAGC,YAAYhF,OAG5B,EAAKsC,YAAYvJ,KAAKgM,EAAW,GAAGC,YAAYhF,OAE9C+E,EAAW,GAAGC,YAAY7E,SAG5B,EAAKoC,cAAcxJ,KAAKgM,EAAW,GAAGC,YAAY7E,SAEhD4E,EAAW,GAAGC,YAAY1E,KAG5B,EAAKkC,UAAUzJ,KAAKgM,EAAW,GAAGC,YAAY1E,KAE5CyE,EAAW,GAAGC,YAAYvE,WAG5B,EAAKgC,gBAAgB1J,KAAKgM,EAAW,GAAGC,YAAYvE,WAGtD,EAAKiC,UAAU3J,KAAKgM,EAAW,GAAGnE,KAElC,EAAK+B,aAAa5J,KAAKgM,EAAW,GAAGjE,SAlDV,2CAoD5B,KA3D0B,6C,EAiEjC9G,kBAAoB,WAClB,EAAKqH,cACL,EAAKuC,UAELnF,SAAS6F,iBACP9F,EACA,EAAKM,wBACL,I,EAMJmG,qBAAuB,WAErBxG,SAASyG,oBAAoB1G,EAAkB,EAAKM,wBAEpD,EAAKuC,cACL,EAAKhC,yBACL,EAAKN,e,wEAKG,IAAD,OAYP,MAV0D,SAAtDvE,KAAKV,MAAM+E,QAAQrE,KAAKV,MAAM+E,QAAQtD,OAAS,IACjDnE,QAAQC,IAAI,uBACZmD,KAAK6G,cACL7G,KAAK6E,yBACL7E,KAAKuE,eAC0D,SAAtDvE,KAAKV,MAAM+E,QAAQrE,KAAKV,MAAM+E,QAAQtD,OAAS,KACxDf,KAAK4G,YAAc,GACnB5G,KAAK6G,cACL7G,KAAKoJ,WAGL,yBAAK9L,MAAM,WACT,kBAAC,eAAD,CACEqN,eAAgB,WAKd,OAJA/N,QAAQC,IAAI,sBAAuB,EAAKX,OACxC,EAAK2K,cACL,EAAKhC,yBACL,EAAKN,eACE,KAGX,2BAEExF,GAAG,QACHyB,MAAM,MACNtD,OAAO,MACP0N,UAAQ,EACRC,OAAK,S,GAxUsBpK,a,oCCFtBqK,EA3BK,SAAA5O,GAClB,IAAMgG,EAA8B,UAAtBhG,EAAMuF,YACdQ,EAA8B,UAAtB/F,EAAMuF,YACdO,EAA8B,UAAtB9F,EAAMuF,YAEpB,OACE,oCACE,6BACGO,GAAS,yBAAKhF,IAAKd,EAAMoF,UACzBY,GACC,yBAAKpF,UAAU,eACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAaiO,IAAK7O,EAAMoF,QAAS0J,UAAU,MAIhD/I,GAAS,kBAAC,IAAD,CAAkBjF,IAAKd,EAAMoF,QAAS0J,UAAQ,IACxD,6BAVF,QAWQ9O,EAAM+O,MAXd,SAYE,6BACA,kBAAC,IAAD,CAAMlO,GAAE,aAAQb,EAAM+G,QAAtB,4BACA,kBAAC,EAAD,CAASlE,GAAI7C,EAAMgP,YC6DZtI,EAtFF,SAAA1G,GAAU,IAAD,EACMwB,mBAAS,IADf,mBACbuC,EADa,KACNuB,EADM,OAEI9D,mBAAS,IAFb,mBAEbmE,EAFa,KAEPC,EAFO,OAGcpE,mBAAS,IAHvB,mBAGbyN,EAHa,KAGFC,EAHE,OAIM1N,mBAAS,IAJf,mBAIbuF,EAJa,KAINoI,EAJM,OAKU3N,mBAAS,IALnB,mBAKb4N,EALa,KAKJC,EALI,OAMQ7N,mBAAS,IANjB,mBAMbwN,EANa,KAMLM,EANK,OAOc9N,mBAAS,GAPvB,mBAOb+N,EAPa,KAOFC,EAPE,OAQUhO,mBAAS,IARnB,mBAQb4D,EARa,KAQJC,EARI,OASkB7D,mBAAS,IAT3B,mBASb+D,EATa,KASAC,EATA,KA+BpBmB,qBAAU,WAAM,IAEN1F,EAASjB,EAAM6G,MAAMC,OAArB7F,KACFgO,EAAYjP,EAAM6G,MAAMC,OAAOjE,GACrC5C,IAAMwE,IAAN,iBAAoBxD,EAApB,YAA4BgO,IAAa9O,MAAK,SAAAC,GAC5C,IAAMqP,EAAQrP,EAASC,KAAKmD,IACtBuD,EAAQ3G,EAASC,KAAK0G,MAAM7F,SAC5BkO,EAAUhP,EAASC,KAAK0G,MAAMvD,IAC9B+L,EAAYnP,EAASC,KAAK0O,MAAMlK,OAJkB,EAKVzE,EAASC,KAA/C0D,EALgD,EAKhDA,MAAO4B,EALyC,EAKzCA,KAAMJ,EALmC,EAKnCA,YAAaH,EALsB,EAKtBA,QAElCnF,IAAMiC,KAAN,qBAAyBuN,IAAStP,MAAK,SAAAuP,GACrC,IAAMV,EAASU,EAAQrP,KAAKmD,IAC5BoC,EAAQD,GACRL,EAASvB,GACToL,EAASpI,GACTsI,EAAWD,GACXE,EAAUN,GACVE,EAAaO,GACbD,EAAaD,GACb/J,EAAeD,GACfF,EAAWD,WAGd,IAEH,IAAMhC,EAAQ,CACZW,QACA4B,OACAsJ,YACAlI,QACAqI,UACAJ,SACAO,YACAhK,cACAH,WAGF,OACE,6BAWE,kBAAC,EAAgBhC,KCtERuM,EAZE,SAAA3P,GACf,OACE,yBAAKY,UAAU,eACb,4BAAKZ,EAAMuD,QAAQQ,OACnB,4BAAK/D,EAAMuD,QAAQS,MACnB,gCACE,kBAAC,IAAD,CAAMnD,GAAE,aAAQb,EAAMiB,KAAd,YAAsBjB,EAAMuD,QAAQC,MAA5C,WC8BOoM,EAjCK,SAAA5P,GAAU,IAAD,EACGwB,mBAAS,IADZ,mBACpB+B,EADoB,KACXsM,EADW,OAEHrO,mBAAS,IAFN,mBAEpBP,EAFoB,KAEdT,EAFc,KAwB3B,OApBAmG,qBAAU,WAAM,IAEN1F,EAASjB,EAAM6G,MAAMC,OAArB7F,KACRhB,IAAMwE,IAAN,iBAAoBxD,IAAQd,MAAK,SAAAuE,GAC/B,IAAMoL,EAAcpL,EAAWrE,KAC/BwP,EAAWC,GACXtP,EAAQS,QAET,IAaD,oCACGsC,EAAQwB,UAAUC,KAAI,SAAAC,GACrB,OAAO,kBAAC,EAAD,CAAU1B,QAAS0B,EAAIC,IAAKD,EAAGzB,IAAKvC,KAAMA,S,QC9BpC8O,E,kLAIH,IACC9O,EAAO6C,KAAK9D,MAAM6G,MAAMC,OAAxB7F,KACPhB,IAAMwE,IAAN,0CAA6CxD,IAAQd,MAAK,SAAAC,GACtD,IAAM4P,EAAU5P,EAASC,KAAK2E,KAAI,SAAAC,GAC7B,OAAOA,EAAG8J,SAEhBrO,QAAQC,IAAI,kBAAkBqP,GAC9B,IAAMC,EAAO,GAEbD,EAAU3D,SAAQ,SAAC6D,EAAKC,GACpBD,EAAK7D,SAAQ,SAACpH,EAAGkL,GACbF,EAAO5N,KAAK4C,EAAGmL,sBAGvB,IAAIC,EAAc,GAClBJ,EAAO5D,SAAQ,SAAC6D,EAAKC,GACjBE,EAAchO,KAAK6N,EAAKI,eAE5B,IAGIC,GAAiB,IAHVF,EAAcG,QAAO,SAACC,EAAKC,GAClC,OAAOD,EAAMC,IACf,GAC+BL,EAAcxL,QAAS8L,QAAQ,GAIhE,SAASC,EAAWC,GAShB,OAJiBZ,EAAOO,QAAO,SAACM,EAAIC,GAEnC,OADGA,GAAQA,EAAKF,IAAUC,IACnBA,IACN,GAXNpQ,QAAQC,IAAI4P,GACZ7P,QAAQC,IAAI0P,GAaf,IAAIW,EAAW,GACftQ,QAAQC,IAAI,UAAWqP,GACvBA,EAAU3D,SAAQ,SAAC6D,EAAKC,GACpBD,EAAK7D,SAAQ,SAAApH,GACT+L,EAAW3O,KAAK4C,EAAGiF,WAG3B,IAAI+G,EAAID,EAAWR,QAAO,SAACC,EAAKP,GAC5B,OAAOO,EAAMP,IAEf,GAGEgB,EAAU,GAEdlB,EAAU3D,SAAQ,SAAC6D,EAAKC,GACpBD,EAAK7D,SAAQ,SAAApH,GACTiM,EAAU7O,KAAK4C,EAAGmF,cAG1B,IAAI+G,EAAKD,EAAUE,QAAO,SAAAnM,GACtB,GAAS,SAALA,EAAY,OAAOA,KAOrBoM,IALaF,EAAKtM,OAAOqM,EAAUrM,OAAO,KAAK8L,QAAQ,KACvCO,EAAUrM,OAAOsM,EAAKtM,QAAQqM,EAAUrM,OAAO,KAAK8L,QAAQ,GACtEO,EAAUrM,OAEZ8C,KAAKC,MAAMqJ,EAAID,EAAWnM,QAChB,CAChBgE,MAAM+H,EAAW,YACjB5H,UAAU4H,EAAW,gBACrBzH,QAAQyH,EAAW,cACnBtH,MAAMsH,EAAW,YACjBhH,IAAIgH,EAAW,UACf7G,UAAU6G,EAAW,kBAE1BlQ,QAAQC,IAAI0Q,Q,+BAaX,OAFA3Q,QAAQC,IAAImD,KAAK9D,MAAMuD,SAEhB,6BACnB,+CAAqBO,KAAK9D,MAAMuD,QAAQwL,MAAMlK,OAA9C,KACA,0C,GA3FmCN,aCCdwL,E,2MAEb3M,MAAM,CACFkO,UAAU,GACVf,gBAAgB,EAChBgB,YAAY,EACZC,cAAc,EACdtH,IAAI,EACJ6E,MAAM,EACNxL,QAAU,I,EAGtBD,kBAAkB,WACd,EAAKO,W,yEAES,IAAD,OACE5C,EAAO6C,KAAK9D,MAAM6G,MAAMC,OAAxB7F,KACPhB,IAAMwE,IAAN,8CAAiDxD,IAAQd,MAAK,SAAAC,GACvCA,EAASC,KAA5B,IACMoR,EAAS,GACCrR,EAASC,KAAK2E,KAAI,SAAAC,GAC7B,OAAOA,EAAG8J,SAEL1C,SAAQ,SAAA6D,GACdA,EAAK7D,SAAQ,SAAApH,GACTwM,EAASpP,KAAK4C,SAGtB,IAAMmL,EAAiBqB,EAASzM,KAAI,SAAAC,GAChC,OAAOA,EAAGmL,kBAEGqB,EAASzM,KAAI,SAAAC,GAC1B,OAAOA,EAAGyM,cAId,SAASd,EAAWC,GAOhB,OANUT,EAAeI,QAAO,SAACC,EAAK3N,GAIlC,OAHGA,GAASA,EAAM+N,IACbJ,IAEEA,IACT,GAKP,SAASkB,EAAWC,GAGlB,OAFSA,EAAMpB,QAAO,SAACqB,EAAUC,GAAX,OAAuBA,EAAWD,KACxCD,EAAM/M,OAI1B,IAAIwL,EAAc,GACjBD,EAAe/D,SAAQ,SAAC6D,GACpBG,EAAchO,KAAK6N,EAAKI,eAE9B,IAAIC,GAAiB,IAAIoB,EAAWtB,IAAgBM,QAAQ,GACxDK,EAAW,GACfS,EAASpF,SAAQ,SAAC6D,GACVc,EAAW3O,KAAK6N,EAAKhG,QAE7B,IAAIA,EAAIvC,KAAKC,MAAM+J,EAAWX,IAI1BE,EAAU,GACdO,EAASpF,SAAQ,SAAC6D,GAEVgB,EAAU7O,KAAK6N,EAAK9F,WAG5B,IAAI+G,EAAKD,EAAUE,QAAO,SAAAnM,GACrB,GAAS,SAALA,EAAY,OAAOA,KAEtBsM,GAAaJ,EAAKtM,OAAOqM,EAAUrM,OAAO,KAAK8L,QAAQ,GACtDa,IAAgBN,EAAUrM,OAAOsM,EAAKtM,QAAQqM,EAAUrM,OAAO,KAAK8L,QAAQ,GAC7E5B,EAAM0C,EAAS5M,OAEfwM,EAAc,CAChBxI,MAAM+H,EAAW,YACjB5H,UAAU4H,EAAW,gBACrBzH,QAAQyH,EAAW,cACnBtH,MAAMsH,EAAW,YACjBhH,IAAIgH,EAAW,UACf7G,UAAU6G,EAAW,iBAGrBU,EAAY,CAChBS,OAAO,CAAC,QAAS,YAAa,UAAW,QAAS,MAAO,aACzDC,SAAS,CAAC,CACN1P,MAAM,oBACNjC,KAAK,CACGgR,EAAcxI,MACdwI,EAAcrI,UACdqI,EAAclI,QACdkI,EAAc/H,MACd+H,EAAczH,IACdyH,EAActH,WAEtBkI,gBAAgB,CACZ,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,8BAMT,EAAKxO,SAAS,CACZ6N,YACApH,MACAsH,gBACAD,cACDhB,kBACAxB,e,+BAYA,OADArO,QAAQC,IAAImD,KAAKV,MAAMG,SAEnB,yBAAK3C,UAAU,SACX,kBAAC,IAAD,CACIP,KAAMyD,KAAKV,MAAMkO,UACjBY,QAAS,CAAEC,qBAAqB,KAGpC,yBAAKpR,MAAO,CAACqR,QAAS,OAAQC,eAAe,iBAC7C,iDAAuBvO,KAAKV,MAAMmN,gBAAlC,KACA,4CAAkBzM,KAAKV,MAAM8G,IAA7B,MACA,oCAAUpG,KAAKV,MAAMmO,YAArB,KACA,sCAAYzN,KAAKV,MAAMoO,cAAvB,KACA,2CAAiB1N,KAAKV,MAAM2L,QAE3BjL,KAAKV,MAAMG,QAAQyB,KAAI,SAAAC,GACpB,OAAO,kBAAC,EAAD,CAAa1B,QAAS0B,Y,GAlJlBV,aC+BpB+N,EAtBA,WACb,OACE,oCAEE,yBAAK1R,UAAU,oBAAoBE,IAAI,qBAEvC,4BACEC,MAAO,CAAEwR,cAAe,QACxBzR,IAAI,6CACJwD,MAAM,MACNtD,OAAO,MACPwR,YAAY,IACZ5R,UAAU,2BACV6R,iBAAe,IAEjB,uBAAG1R,MAAO,CAAE2R,SAAU,QAAU9R,UAAU,eAA1C,iH,ikBChBN,IA6He+R,EA7HK,SAAC,GAAoD,IAAlDnS,EAAiD,EAAjDA,QAASoS,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,cAAe5R,EAAW,EAAXA,KAE3D,OADAP,QAAQC,IAAIM,GA4CV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,0BAAMc,SAAU6Q,GAEd,kBAAC,IAAD,CACEtQ,MAAM,OACNK,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,MAAO7B,EAAKI,SACZ0B,SAAU,SAAAf,GAAC,OACTxB,EAAQ,EAAD,GAAMS,EAAN,eAAae,EAAEgB,OAAOJ,KAAOZ,EAAEgB,OAAOF,YAIjD,kBAAC,IAAD,CACER,MAAM,WACNK,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,MAAO7B,EAAKC,SACZ6B,SAAU,SAAAf,GAAC,OACTxB,EAAQ,EAAD,GAAMS,EAAN,eAAae,EAAEgB,OAAOJ,KAAOZ,EAAEgB,OAAOF,YAIjD,kBAAC,IAAD,CACER,MAAM,cACNK,KAAK,WACLC,KAAK,kBACLC,GAAG,kBACHC,MAAO7B,EAAK6R,gBACZ/P,SAAU,SAAAf,GAAC,OACTxB,EAAQ,EAAD,GAAMS,EAAN,eAAae,EAAEgB,OAAOJ,KAAOZ,EAAEgB,OAAOF,YAIjD,kBAAC,IAAD,CACER,MAAM,eACNK,KAAK,WACLC,KAAK,kBACLC,GAAG,kBACHC,MAAO7B,EAAK8R,gBACZhQ,SAAU,SAAAf,GAAC,OACTxB,EAAQ,EAAD,GAAMS,EAAN,eAAae,EAAEgB,OAAOJ,KAAOZ,EAAEgB,OAAOF,YAUjD,yBAAKlC,UAAU,eACb,yBAAKA,UAAU,eACb,2BACE+B,KAAK,OACLC,KAAK,qBACLC,GAAG,qBACHE,SAAU8P,EACVjS,UAAU,oBACV6F,mBAAiB,0BAEnB,2BAAO7F,UAAU,8BAA8BuF,QAAQ,QAAvD,iBAKJ,yBAAKvF,UAAU,eACb,kBAAC,IAAD,CAAQ+B,KAAK,UAAb,c,0jBC5Hd,IAkFeqQ,GAlFE,SAAC,GAAgC,IAAtBxP,EAAqB,EAA7BvC,KAAQuC,IAAOpB,EAAc,EAAdA,QACjC1B,QAAQC,IAAI6C,GADmC,MAYvBhC,mBAAS,CAC/BH,SAAU,GACVH,SAAU,GACV+R,eAAgB,GAChBH,gBAAiB,GACjBC,gBAAiB,KAjB4B,mBAYxC9R,EAZwC,KAYlCT,EAZkC,OAoBjBgB,oBAAS,GApBQ,gCAqBjBA,mBAAS,KArBQ,mBAqBxCI,EArBwC,KAqB/BC,EArB+B,KA+B/C8E,qBAAU,WACR1G,IACGwE,IADH,4BAC4BjB,IACzBrD,MAAK,YAAuC,IAAD,IAAnCE,KAAQgB,EAA2B,EAA3BA,SAAUH,EAAiB,EAAjBA,SACzBV,EAAQ,MAAKS,EAAN,CAAYI,WAAUH,mBAEhC,IA6BH,OACE,6BACE,wBAAIN,UAAU,2BAAd,qBAGA,kBAAC,EAAD,CACEJ,QAASA,EACToS,aAlCe,SAAAjP,GACnBA,EAAM1B,iBACNvB,QAAQC,IAAIM,GACZhB,IACGmH,IADH,4BAC4B5D,GAAOvC,GAChCd,MAAK,WACJiC,EAAQC,KAAK,yBAEd/B,OAAM,SAAAC,GACLsB,EAAWtB,EAAIH,SAASC,KAAKuB,aA0B7BiR,cAtBgB,SAAAlP,GACpBjD,QAAQC,IAAI,0BAA2BgD,EAAMX,OAAOoD,MAAM,IAE1D,IAAMA,EAAQzC,EAAMX,OAAOoD,MAAM,GAC3BC,EAAa,IAAIC,SAGvBD,EAAWE,OAAO,qBAAsBH,GACxCnG,IAAMiC,KAAK,8BAA+BmE,GAAYlG,MAAK,SAAAC,GACzD,IAAM6S,EAAiB7S,EAASC,KAAKmG,WACrChG,EAAQ,MAAKS,EAAN,CAAYgS,wBAajBhS,KAAMA,IAER,uBAAGF,MAAO,CAAE+D,UAAW,WAAalD,KCT3BsR,G,2MAvDb9P,MAAQ,CACNnC,KAAM,EAAKjB,MAAMiB,M,EAGnBT,QAAU,SAAAS,GACR,EAAKwC,SAAS,CACZxC,U,wEAIM,IAAD,OACP,OACE,yBAAKL,UAAU,OACb,kBAAC,EAAD,CAAQK,KAAM6C,KAAKV,MAAMnC,KAAMT,QAASsD,KAAKtD,UAC7C,kBAAC,IAAD,KACG,IACD,kBAAC,IAAD,CACE2S,OAAK,EACLC,KAAK,UACLC,OAAQ,SAAArT,GAAK,OAAI,kBAAC,EAAD,eAAQQ,QAAS,EAAKA,SAAaR,OAEtD,kBAAC,IAAD,CACEmT,OAAK,EACLC,KAAK,SACLC,OAAQ,SAAArT,GAAK,OAAI,kBAAC,EAAD,eAAOQ,QAAS,EAAKA,SAAaR,OAErD,kBAAC,IAAD,CACEmT,OAAK,EACLC,KAAK,qBACLC,OAAQ,SAAArT,GAAK,OACX,kBAAC,EAAD,eAAgBiB,KAAM,EAAKmC,MAAMnC,MAAUjB,OAG/C,kBAAC,IAAD,CAAOmT,OAAK,EAACC,KAAK,yBAAyBE,UAAWnO,IACtD,kBAAC,IAAD,CAAOgO,OAAK,EAACC,KAAK,6BAA6BE,UAAW5M,IAC1D,kBAAC,IAAD,CAAOyM,OAAK,EAACC,KAAK,kBAAkBE,UAAWrM,IAC/C,kBAAC,IAAD,CAAOkM,OAAK,EAACC,KAAM,WAAYE,UAAW1D,IAC1C,kBAAC,IAAD,CAAOuD,OAAK,EAACC,KAAI,eAAkBE,UAAWC,IAC9C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,IAAIE,UAAWhB,IACjC,kBAAC,IAAD,CACEa,OAAK,EACLC,KAAK,eACLC,OAAQ,SAAArT,GAAK,OAAI,kBAAC,EAAD,eAAOiB,KAAM,EAAKmC,MAAMnC,MAAUjB,OAErD,kBAAC,IAAD,CACEmT,OAAK,EACLC,KAAK,YACLC,OAAQ,SAAArT,GAAK,OAAI,kBAAC,GAAD,eAAUiB,KAAM,EAAKmC,MAAMnC,MAAUjB,a,GAhDhDwT,IAAMjP,WCJJkP,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/M,MACvB,2D,qBCPN5G,IAAMwE,IAAI,sBAAsBtE,MAAK,SAAAC,GAGnC,IAAMa,EAAOb,EAASC,KACtBwT,IAASR,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAKpS,KAAMA,KAEb8G,SAAS6E,eAAe,YD8GtB,kBAAmBzI,WACrBA,UAAU2P,cAAcC,MAAM5T,MAAK,SAAA6T,GACjCA,EAAaC,iB","file":"static/js/main.689d6db3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../services/api\";\nimport \"../App.css\";\n\nconst handleLogout = props => {\n  logout().then(() => {\n    props.setUser(null);\n  });\n};\n\nconst Navbar = props => {\n  console.log(\"NAVBAR: \", props);\n  return (\n    <nav className=\" sticky-top navbar navbar-expand-lg navbar-dark default-color\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        <img src=\"motus-logo2.png\" style={{ height: \"30px\" }}></img>\n      </Link>\n\n      {props.user ? (\n        <>\n          <Link className=\"navbar-brand\" to=\"/content-dashboard\">\n            Content\n          </Link>\n          <Link className=\"navbar-brand\" to={`/charts/${props.user.username}`}>\n            Analytics\n          </Link>\n          <Link\n            className=\"navbar-brand my-2 my-lg-0 ml-auto\"\n            to=\"/\"\n            onClick={() => handleLogout(props)}\n          >\n            <i class=\"fas fa-sign-out-alt\"></i>\n          </Link>{\" \"}\n        </>\n      ) : (\n        <>\n          <Link className=\"navbar-brand my-2 my-lg-0 ml-auto\" to=\"/signup\">\n            Signup\n          </Link>\n          <Link className=\"navbar-brand my-2 my-lg-0 ml-auto\" to=\"/login\">\n            <i class=\"fas fa-sign-in-alt\"></i>\n          </Link>\n        </>\n      )}\n      {props.user && (\n        <h3 className=\"heyUser my-2 my-lg-0 ml-auto\">\n          Hey {props.user.fullName}\n        </h3>\n      )}\n      <Link style={{ marginTop: \"5px\" }} to=\"/settings\">\n        <i class=\"fas fa-user-edit white-text\"></i>\n      </Link>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import axios from \"axios\";\n\nconst signup = (username, password, fullName) => {\n  return axios\n    .post(\"/api/auth/signup\", { username, password, fullName })\n    .then(response => {\n      console.log(\"Response: I copied from Montasar:\", response.data);\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(\"/api/auth/login\", { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  return axios\n    .delete(\"/api/auth/logout\")\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nexport { signup, login, logout };\n","import React, { useState } from \"react\";\nimport { signup } from \"../services/api\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\nimport \"../App.css\";\n\n// Written in props. Equivalent in Classes below\n\nconst Signup = props => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    signup(username, password, fullName).then(data => {\n      if (data.message) {\n        setMessage(data.message);\n      } else {\n        props.setUser(data);\n        props.history.push(\"/content-dashboard\");\n      }\n    });\n  };\n\n  return (\n    <>\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <h1 className=\"text-center mb-4 logIn\">Sign up</h1>\n            <form onSubmit={handleSubmit}>\n              <div className=\"grey-text\">\n                {/* <label htmlFor=\"username\">Username: </label> */}\n                <MDBInput\n                  label=\"username\"\n                  validate\n                  group\n                  error=\"wrong\"\n                  success=\"right\"\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  value={username}\n                  onChange={e => setUsername(e.target.value)}\n                />\n                {/* <label htmlFor=\"fullName\">Full Name: </label> */}\n                <MDBInput\n                  label=\"name\"\n                  validate\n                  group\n                  error=\"wrong\"\n                  success=\"right\"\n                  type=\"text\"\n                  name=\"fullName\"\n                  id=\"fullName\"\n                  value={fullName}\n                  onChange={e => setFullName(e.target.value)}\n                />\n                {/* <label htmlFor=\"password\">Password</label> */}\n                <MDBInput\n                  label=\"password\"\n                  validate\n                  group\n                  error=\"wrong\"\n                  success=\"right\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                />\n              </div>\n              {message && <h1>{message}</h1>}\n              <div className=\"text-center\">\n                <MDBBtn type=\"submit\">Create Account</MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nexport default Signup;\n\n// export default class Signup extends Component {\n//   state = {\n//     username: \"\",\n//     password: \"\",\n//     message: \"\",\n//     fullName: \"\"\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     const { username, password, fullName } = this.state;\n//     signup(username, password, fullName).then(data => {\n//       if (data.message) {\n//         this.setState({\n//           message: data.message\n//         });\n//       } else {\n//         this.props.setUser(data);\n//         this.props.history.push(\"/\");\n//         // console.log(data);\n//       }\n//     });\n//   };\n\n//   handleChange = event => {\n//     const { name, value } = event.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n//   render() {\n//     // console.log(this.state.username);\n//     return (\n//       <>\n//         <h1>Sign up</h1>\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor='username'>Username: </label>\n//           <input\n//             type='text'\n//             name='username'\n//             id='username'\n//             value={this.state.username}\n//             onChange={this.handleChange}\n//           />\n//           <label htmlFor='fullName'>Full Name: </label>\n//           <input\n//             type='text'\n//             name='fullName'\n//             id='fullName'\n//             value={this.state.fullName}\n//             onChange={this.handleChange}\n//           />\n//           <label htmlFor='password'>Password</label>\n//           <input\n//             type='password'\n//             name='password'\n//             id='password'\n//             value={this.state.password}\n//             onChange={this.handleChange}\n//           />\n//           {this.state.message && <h1>{this.state.message}</h1>}\n//           <button type='submit'>Create Account</button>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n","import React, { useState } from \"react\";\nimport { login } from \"../services/api\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\nimport \"../App.css\";\n// Written in props. Equivalent in Classes below\n\nconst Login = props => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    login(username, password).then(data => {\n      if (data.message) {\n        setMessage(data.message);\n      } else {\n        props.setUser(data);\n        props.history.push(\"/projects\");\n      }\n    });\n  };\n\n  return (\n    <>\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <h1 className=\" text-center mb-4 logIn\">Log in</h1>\n            <form onSubmit={handleSubmit}>\n              <div className=\"grey-text\">\n                {/* <label htmlFor=\"username\"></label> */}\n                <MDBInput\n                  label=\"username\"\n                  validate\n                  group\n                  error=\"wrong\"\n                  success=\"right\"\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  value={username}\n                  onChange={e => setUsername(e.target.value)}\n                />\n                {/* <label htmlFor=\"password\"></label> */}\n                <MDBInput\n                  label=\"password\"\n                  validate\n                  group\n                  error=\"wrong\"\n                  success=\"right\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                />\n              </div>\n              {message && <h1>{message}</h1>}\n\n              <div className=\"text-center\">\n                <MDBBtn type=\"submit\">Login</MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nexport default Login;\n// export default class Login extends Component {\n//   state = {\n//     username: \"\",\n//     password: \"\",\n//     message: \"\"\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n\n//     const { username, password } = this.state;\n\n//     login(username, password).then(data => {\n//       if (data.message) {\n//         this.setState({\n//           message: data.message,\n//           username: \"\",\n//           password: \"\"\n//         });\n//       } else {\n//         // successfully logged in\n//         // update the state for the parent component\n//         this.props.setUser(data);\n//         this.props.history.push(\"/projects\");\n//       }\n//     });\n//   };\n\n//   handleChange = event => {\n//     const { name, value } = event.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n//   render() {\n//     // console.log(this.state.username);\n//     return (\n//       <>\n//         <h1>Login</h1>\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor='username'>Username: </label>\n//           <input\n//             type='text'\n//             name='username'\n//             id='username'\n//             value={this.state.username}\n//             onChange={this.handleChange}\n//           />\n//           <label htmlFor='password'>Password</label>\n//           <input\n//             type='password'\n//             name='password'\n//             id='password'\n//             value={this.state.password}\n//             onChange={this.handleChange}\n//           />\n//           {this.state.message && <h1>{this.state.message}</h1>}\n\n//           <button type='submit'>Create Account</button>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\n\nexport default class ContentDashCard extends Component {\n  state = {\n    textToCopy: \"\"\n  };\n\n  componentDidMount = () => {\n    const id = this.props.content._id;\n    const user = this.props.user.username;\n    this.setState({\n      textToCopy: `http://localhost:3000/u/${user}/${id}`\n    });\n  };\n\n  handleClick = event => {\n    event.preventDefault();\n    return Axios.delete(`/api/content/${this.props.content._id}`).then(\n      response => {\n        // console.log(response.data);\n        this.props.getData();\n      }\n    );\n  };\n  render() {\n    return (\n      <div className=\"borderCard\">\n        <div className=\"contentCard\">\n          <h2>{this.props.content.title}</h2>\n          <h4>{this.props.content.date}</h4>\n\n          <Link\n            style={{ textDecoration: \"none\", color: \"black\" }}\n            to={`/content-dashboard/${this.props.content._id}`}\n          >\n            <i className=\"fas fa-lg fa-eye\"></i>\n          </Link>\n\n          {/* EDIT */}\n\n          <Link\n            style={{ textDecoration: \"none\", color: \"black\" }}\n            to={`/edit/${this.props.content._id}`}\n          >\n            <i className=\"fas fa-lg fa-edit\"></i>\n          </Link>\n\n          {/* DELETE */}\n          <i className=\"fas fa-lg fa-trash-alt\" onClick={this.handleClick}></i>\n\n          {/* SHARE */}\n          <i\n            className=\"far fa-lg fa-share-square\"\n            onClick={() => navigator.clipboard.writeText(this.state.textToCopy)}\n          ></i>\n\n          <Link to={`/u/${this.props.user.username}/${this.props.content._id}`}>\n            {\" \"}\n            View as Normal\n          </Link>\n        </div>\n        <hr width=\"80%\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport ContentDashCard from \"./ContentDashCard\";\nimport { Link } from \"react-router-dom\";\n\nexport default class ContentManager extends Component {\n  state = {\n    user: this.props.user,\n    content: [],\n    textToCopy: \"\"\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  getData = () => {\n    Axios.get(\"/api/content\").then(contentArr => {\n      this.setState({\n        content: contentArr.data\n      });\n    });\n  };\n\n  setTextToCopy = id => {\n    const { username } = this.state.user.username;\n    this.setState({\n      textToCopy: `http://localhost:3000/u/${username}/${id}`\n    });\n    navigator.clipboard.writeText(this.state.textToCopy);\n  };\n\n  render() {\n    // console.log(this.state.content);\n    const { user, content } = this.state;\n    const filled = content.length === 0 ? false : \"Not empty\";\n\n    if (!user) return <h1>You are not logged in, so no dashboard for you</h1>;\n\n    return (\n      <>\n        <div>\n          <h2 style={{ textAlign: \"center\" }} className=\"logIn\">\n            My Content Dashboard\n          </h2>\n\n          <br />\n          {!filled && <div>Click above </div>}\n          {this.state.content.reverse().map(el => {\n            return (\n              <div className=\"text-center dashCard\">\n                <ContentDashCard\n                  content={el}\n                  getData={this.getData}\n                  key={el._id}\n                  user={this.state.user}\n                />\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"fixed-bottom addBtn\">\n          <Link to=\"/content-dashboard/add\">\n            <i className=\"fas fa-3x fa-plus-circle text-default\"></i>\n          </Link>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\n\nconst AddContent = props => {\n  const [urlPath, setUrlPath] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [contentType, setContentType] = useState(\"image\");\n  const [enctype, setEnctype] = useState(false);\n  const [body, setBody] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  // const [selected, setSelected] = useState(null);\n\n  const handleChange = event => {\n    console.log(`Option selected:`, event.target.value);\n    const { value } = event.target;\n    console.log(typeof value, value === event.target.value);\n    if (value === \"text\") {\n      setContentType(value);\n      setMessage(\"Adding text will be added later. Stay tuned!\");\n    } else if (value !== \"video\") {\n      setContentType(value);\n      setEnctype(true);\n    } else {\n      setContentType(value);\n      setMessage(\"\");\n    }\n  };\n\n  // Form Submit Handler. Sends title, contentType, Body and the URL to the Database\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (urlPath && title && contentType && body) {\n      console.log(urlPath);\n      axios\n        .post(\"/api/content/add\", {\n          urlPath,\n          title,\n          contentType,\n          body\n        })\n        .then(() => {\n          props.history.push(\"/content-dashboard\");\n        });\n    } else {\n      setMessage(\"Please fill out the whole form\");\n    }\n  };\n\n  // Sends Image to\n  const onImageUpload = event => {\n    console.log(\"the file to be added is\", event.target.files[0]);\n\n    const files = event.target.files[0];\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append(\"urlPath\", files);\n    axios.post(\"/api/content/add/image\", uploadData).then(response => {\n      const urlPath = response.data.secure_url;\n      setUrlPath(urlPath);\n    });\n  };\n\n  const onAudioUpload = event => {\n    console.log(\"the file to be added is\", event.target.files[0]);\n\n    const files = event.target.files[0];\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append(\"urlPath\", files);\n    axios.post(\"/api/content/add/audio\", uploadData).then(response => {\n      const urlPath = response.data.secure_url;\n      setUrlPath(urlPath);\n    });\n  };\n\n  const formInfo = enctype ? \"multipart/form-data\" : \"\";\n  const image = contentType === \"image\";\n  const audio = contentType === \"audio\";\n  const video = contentType === \"video\";\n  const text = contentType === \"text\";\n\n  return (\n    <>\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <form onSubmit={handleSubmit} encType={formInfo}>\n              <label className=\"text-default logIn\" htmlFor=\"title\">\n                Title\n              </label>\n              <MDBInput\n                label=\"\"\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n              />\n              <label className=\"text-default logIn\" htmlFor=\"contentType\">\n                Content Type\n              </label>\n              <select\n                className=\"browser-default custom-select\"\n                id=\"contentType\"\n                name=\"contentType\"\n                value={contentType}\n                onChange={handleChange}\n              >\n                <option value=\"image\">Image</option>\n                <option value=\"text\">Text</option>\n                <option value=\"audio\">Audio</option>\n                <option value=\"video\">Video</option>\n              </select>\n              {image && (\n                <>\n                  <label className=\"text-default logIn\" htmlFor=\"file\">\n                    Upload your image\n                  </label>\n                  <div className=\"input-group\">\n                    <div className=\"custom-file\">\n                      <input\n                        type=\"file\"\n                        name=\"urlPath\"\n                        id=\"urlPath\"\n                        onChange={onImageUpload}\n                        className=\"custom-file-input\"\n                        aria-describedby=\"inputGroupFileAddon01\"\n                      />\n                      <label\n                        className=\"custom-file-label grey-text\"\n                        htmlFor=\"file\"\n                      >\n                        choose file\n                      </label>\n                    </div>\n                    <img src={urlPath} />\n                  </div>\n                  {/* <MDBInput\n                    type=\"file\"\n                    name=\"urlPath\"\n                    id=\"urlPath\"\n                    onChange={onImageUpload}\n                  /> */}\n                </>\n              )}\n              {audio && (\n                <>\n                  <label className=\"text-default logIn\" htmlFor=\"file\">\n                    Upload your audio\n                  </label>\n                  <MDBInput\n                    type=\"file\"\n                    name=\"urlPath\"\n                    id=\"urlPath\"\n                    onChange={onAudioUpload}\n                  />\n                </>\n              )}\n              {video && (\n                <>\n                  <label htmlFor=\"file\">Paste your Youtube Link</label>\n                  <MDBInput\n                    type=\"text\"\n                    name=\"urlPath\"\n                    id=\"urlPath\"\n                    onChange={e => setUrlPath(e.target.value)}\n                    value={urlPath}\n                  />\n                </>\n              )}\n              {text && <div>{message}</div>}\n              <label htmlFor=\"body\">Add a description</label>\n              <MDBInput\n                name=\"body\"\n                id=\"body\"\n                type=\"text\"\n                value={body}\n                onChange={e => setBody(e.target.value)}\n              />\n              {!text && (\n                <div className=\"text-center\">\n                  <MDBBtn type=\"submit\">Upload</MDBBtn>\n                </div>\n              )}\n              {message}\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nexport default AddContent;\n\n// export default class AddContent extends Component {\n//   state = {\n//     url: \"\",\n//     title: \"\",\n//     contentType: \"text\",\n//     body: \"\",\n//     imagePath: \"\",\n//     encType: false\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     // imagePath\n//     const { url, title, contentType, body, imagePath } = this.state;\n//     console.log(\"WHATS UP\", this.state.imagePath);\n//     axios\n//       .post(\"/api/content/add\", {\n//         url,\n//         title,\n//         contentType,\n//         body,\n//         imagePath\n//       })\n//       .then(() => {\n//         this.props.history.push(\"/content-dashboard\");\n//       });\n//   };\n\n//   handleChange = event => {\n//     const { name, value } = event.target;\n//     console.log(name);\n//     console.log(value);\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n\n//   onUpload = event => {\n//     console.log(\"the file to be added is\", event.target.files[0]);\n\n//     const files = event.target.files[0];\n//     const uploadData = new FormData();\n//     // imageUrl => this name has to be the same as in the model since we pass\n//     // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n//     uploadData.append(\"imagePath\", files);\n//     axios.post(\"/api/content/add/image\", uploadData).then(response => {\n//       const imagePath = response.data.secure_url;\n//       console.log(typeof imagePath);\n//       this.setState({\n//         imagePath\n//       });\n//     });\n//   };\n\n//   handleSelect = event => {\n//     const { name, value } = event.target;\n//     console.log(name);\n//     if (value !== \"text\") {\n//       this.setState({\n//         [name]: value,\n//         encType: true\n//       });\n//     } else if (value === \"text\") {\n//       this.setState({\n//         [name]: value,\n//         encType: false\n//       });\n//     }\n//   };\n\n//   // encType='multipart/form-data'\n//   render() {\n//     console.log(this.state.encType);\n//     const { contentType } = this.state;\n//     const notText = contentType !== \"text\" ? true : false;\n\n//     const enctype = this.state.encType ? \"multipart/form-data\" : \"\";\n\n//     return (\n//       <>\n//         <form onSubmit={this.handleSubmit} encType={enctype}>\n//           <label htmlFor='url'>URL</label>\n//           <input\n//             type='text'\n//             name='url'\n//             id='title'\n//             value={this.state.url}\n//             onChange={this.handleChange}\n//           />\n\n//           <label htmlFor='title'>Title</label>\n//           <input\n//             type='text'\n//             name='title'\n//             id='title'\n//             value={this.state.title}\n//             onChange={this.handleChange}\n//           />\n//           <label htmlFor='contentType'>Content Type</label>\n//           <select\n//             id='contentType'\n//             name='contentType'\n//             value={this.state.contentType}\n//             onChange={this.handleSelect}\n//           >\n//             <option value='text'>Text</option>\n//             <option value='audio'>Audio</option>\n//             <option value='video'>Video</option>\n//             <option value='image'>Image</option>\n//           </select>\n\n//           {notText && (\n//             <>\n//               <label htmlFor='file'>Content</label>\n//               <input\n//                 type='file'\n//                 name='imagePath'\n//                 id='imagePath'\n//                 onChange={this.onUpload}\n//               />{\" \"}\n//             </>\n//           )}\n//           <label htmlFor='body'>Body</label>\n//           <input\n//             type='text'\n//             name='body'\n//             id='body'\n//             value={this.state.body}\n//             onChange={this.handleChange}\n//           />\n//           <button type='submit'>Add your lovely content now</button>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Written with Hooks. Same as below\n\nconst Post = props => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  // const [id, setId] = useState(\"\");\n  // const [owner, setOwner] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [textToCopy, setTextToCopy] = useState(\"\");\n\n  // const getPostData = () => {\n  //   const { unique } = props.match.params;\n  //   axios.get(`/api/content/${unique}`).then(response => {\n  //     const post = response.data;\n  //     const { title, body } = post;\n  //     const id = post._id;\n  //     const owner = post.owner.username;\n  //     const { fullName } = post.owner;\n  //     setTitle(title);\n  //     setBody(body);\n  //     setId(id);\n  //     setOwner(owner);\n  //     setFullName(fullName);\n  //     setTextToCopy(`http://localhost:3000/u/${owner}/${id}`);\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   getPostData();\n  // }, []);\n\n  useEffect(() => {\n    const { unique } = props.match.params;\n    axios.get(`/api/content/${unique}`).then(response => {\n      const post = response.data;\n      const { title, body } = post;\n      const id = post._id;\n      const owner = post.owner.username;\n      const { fullName } = post.owner;\n      setTitle(title);\n      setBody(body);\n      // setId(id);\n      // setOwner(owner);\n      setFullName(fullName);\n      setTextToCopy(`http://localhost:3000/u/${owner}/${id}`);\n    });\n  }, []);\n\n  return (\n    <div>\n      <button onClick={() => props.history.goBack()}>\n        <i class=\"fas fa-3x fa-angle-left\"></i>\n      </button>\n      <h1>{title}</h1>\n      <p>{body}</p>\n      <button\n        onClick={() => {\n          navigator.clipboard.writeText(textToCopy);\n        }}\n      >\n        Share this link and check the emotional responses.\n      </button>\n    </div>\n  );\n};\n\nexport default Post;\n\n// export default class Post extends Component {\n//   state = {\n//     title: \"\",\n//     body: \"\",\n//     id: \"\",\n//     owner: \"\",\n//     fullName: \"\"\n//   };\n\n//   getPostData = () => {\n//     const { unique } = this.props.match.params;\n//     axios.get(`/api/content/${unique}`).then(response => {\n//       const post = response.data;\n//       const { title, body } = post;\n//       const id = post._id;\n//       const owner = post.owner.username;\n//       const { fullName } = post.owner;\n//       this.setState({\n//         title,\n//         body,\n//         id,\n//         owner,\n//         fullName,\n//         textToCopy: `http://localhost:3000/u/${owner}/${id}`\n//       });\n//     });\n//   };\n\n//   componentDidMount = () => {\n//     this.getPostData();\n//   };\n\n//   render() {\n//     // console.log(this.state);\n//     return (\n//       <div>\n//         <h1>{this.state.title}</h1>\n//         <p>{this.state.body}</p>\n//         <button\n//           onClick={() => {\n//             navigator.clipboard.writeText(this.state.textToCopy);\n//           }}\n//         >\n//           Share this link and check the emotional responses.\n//         </button>\n//       </div>\n//     );\n//   }\n// }\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\n\nconst EditContent = props => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  // const getData = () => {\n  //   const { editPost } = props.match.params;\n  //   axios.get(`/api/content/${editPost}`).then(post => {\n  //     const id = post.data._id;\n  //     const { title, body } = post.data;\n  //     setTitle(title);\n  //     setBody(body);\n  //     setId(id);\n  //   });\n  // };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.put(`/api/content/${id}`, { title, body }).then(() => {\n      props.history.push(\"/content-dashboard\");\n    });\n  };\n\n  useEffect(() => {\n    // getData(); Same as above. Only written here to stop warning\n    const { editPost } = props.match.params;\n    axios.get(`/api/content/${editPost}`).then(post => {\n      const id = post.data._id;\n      const { title, body } = post.data;\n      setTitle(title);\n      setBody(body);\n      setId(id);\n    });\n  }, []);\n\n  return (\n    <>\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <form onSubmit={handleSubmit}>\n              <div className=\"text-default\">\n                <label className=\"text-default logIn\" htmlFor=\"title\">\n                  Title\n                </label>\n                <MDBInput\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  value={title}\n                  onChange={e => setTitle(e.target.value)}\n                />\n\n                <label className=\"text-default\" htmlFor=\"body\">\n                  Description\n                </label>\n                <MDBInput\n                  type=\"text\"\n                  id=\"body\"\n                  name=\"body\"\n                  value={body}\n                  onChange={e => setBody(e.target.value)}\n                />\n                <div className=\"text-center\">\n                  <MDBBtn type=\"submit\">Save</MDBBtn>\n                </div>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nexport default EditContent;\n\n// export default class EditContent extends Component {\n//   state = {\n//     title: \"\",\n//     body: \"\",\n//     id: \"\"\n//   };\n\n//   getData = () => {\n//     const { editPost } = this.props.match.params;\n//     // console.log(this.props.match.params.editPost);\n//     axios.get(`/api/content/${editPost}`).then(post => {\n//       // console.log(post.data);\n//       this.setState({\n//         title: post.data.title,\n//         body: post.data.body,\n//         id: post.data._id\n//       });\n//     });\n//   };\n\n//   componentDidMount = () => {\n//     this.getData();\n//   };\n\n//   handleChange = event => {\n//     const { name, value } = event.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     const { title, body, id } = this.state;\n//     axios.put(`/api/content/${id}`, { title, body }).then(() => {\n//       this.props.history.push(\"/content-dashboard\");\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor='title'>Title</label>\n//           <input\n//             type='text'\n//             id='title'\n//             name='title'\n//             value={this.state.title}\n//             onChange={this.handleChange}\n//           />\n\n//           <label htmlFor='body'>Body</label>\n//           <input\n//             type='text'\n//             id='body'\n//             name='body'\n//             value={this.state.body}\n//             onChange={this.handleChange}\n//           />\n//           <button type='submit'>Edit your content</button>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n","import React, { Component } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport axios from \"axios\";\nimport { Beforeunload } from \"react-beforeunload\";\n\n// MEDIAN FUNCTION to have more accurate result from the emotions\nconst median = values => {\n  if (values.length === 0) return 0;\n\n  values.sort((a, b) => {\n    return a - b;\n  });\n\n  var half = Math.floor(values.length / 2);\n\n  if (values.length % 2) return values[half];\n\n  return (values[half - 1] + values[half]) / 2.0;\n};\n//-------------------------------------------------------------------\n\n//_______________________CHECK TAB FOCUS_____________________________\nlet hidden = null;\nlet visibilityChange = null;\nif (typeof document.hidden !== \"undefined\") {\n  // Opera 12.10 and Firefox 18 and later support\n  hidden = \"hidden\";\n  visibilityChange = \"visibilitychange\";\n} else if (typeof document.msHidden !== \"undefined\") {\n  hidden = \"msHidden\";\n  visibilityChange = \"msvisibilitychange\";\n} else if (typeof document.webkitHidden !== \"undefined\") {\n  hidden = \"webkitHidden\";\n  visibilityChange = \"webkitvisibilitychange\";\n}\n// __________________________________________________________________\n\nexport default class FaceApi extends Component {\n  // SAVE TAB FOCUS\n  state = {\n    actions: []\n  };\n\n  handleVisibilityChange = () => {\n    if (document[hidden]) {\n      this.setState({ actions: [...this.state.actions, \"hide\"] });\n    } else {\n      this.setState({ actions: [...this.state.actions, \"show\"] });\n    }\n  };\n\n  // MANAGES THE FACE DETECTION OBJ, STORE INFO TO DB, STOP FACEAPI DETECTION, CALCULATE MEDIAN AND MAX DETECTION VALUES, STOP WEBCAMS\n  dataManager = () => {\n    clearInterval(this.myDetection);\n    this.webcam();\n\n    // CALCULATE MAX AND AVG VALUES OF EMOTIONS DURING THE SESSION\n    const values = this.MaxAndAvg();\n    const getTime = this.timeSessionCalculation();\n    // STORE THE MAX AND AVG VALUES IN faceDetection Object\n    let faceDetection = {\n      angry: [values.angryMaxValue, values.angryAvgValue],\n      disgusted: [values.disgustedMaxValue, values.disgustedAvgValue],\n      fearful: [values.fearfulMaxValue, values.fearfulAvgValue],\n      happy: [values.happyMaxValue, values.happyAvgValue],\n      neutral: [values.neutralMaxValue, values.neutralAvgValue],\n      sad: [values.sadMaxValue, values.sadAvgValue],\n      surprised: [values.surprisedMaxValue, values.surprisedAvgValue],\n      age: Math.ceil(values.age),\n      gender: values.gender,\n      time: {\n        fullTime: values.time,\n        min: getTime.min,\n        sec: getTime.sec\n      }\n    };\n\n    console.log(\"FaceDetectionOBJ------\", faceDetection);\n    console.log(\"STATE AFTER UNMOUNT-------\", values);\n\n    // SEND faceDetection Object to the DB\n    axios\n      .put(`/api/views/${this.props.id}`, faceDetection)\n      .then(detectionValues => {\n        console.log(detectionValues);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //_____________________TIME SESSION MANAGER____________________\n  timeElapsed = [];\n\n  timeSession = () => {\n    let currTime = \"\";\n    let startEndSession = [];\n    let date = new Date().toString().split(\" \");\n    let day = date[2];\n    let month = date[1];\n    let year = date[3];\n    let time = date[4].toString().split(\"\");\n    // let gmt = date[5];\n\n    let hour = time[0] + time[1];\n    let min = time[3] + time[4];\n    let sec = time[6] + time[7];\n    currTime = `${day} ${month} ${year} ${hour}:${min}:${sec}`;\n    // console.log(day, month, year, hour, min, sec);\n    startEndSession = this.timeElapsed.push(currTime);\n    return startEndSession;\n  };\n\n  timeSessionCalculation = () => {\n    let minStart = parseInt(this.timeElapsed[0].split(\" \")[3].split(\":\")[1]);\n    let secStart = parseInt(this.timeElapsed[0].split(\" \")[3].split(\":\")[2]);\n    let minEnd = parseInt(this.timeElapsed[1].split(\" \")[3].split(\":\")[1]);\n    let secEnd = parseInt(this.timeElapsed[1].split(\" \")[3].split(\":\")[2]);\n\n    let minElapsed = () => {\n      return minEnd - minStart;\n    };\n    let secElapsed = () => {\n      if (minEnd - minStart > 0) {\n        let secInit = 60 - secStart;\n        return secInit + secEnd;\n      } else {\n        return secEnd - secStart;\n      }\n    };\n    return { min: minElapsed(), sec: secElapsed() };\n  };\n\n  //_______________________________________________________________\n\n  // FACEAPI Detections\n  angryValues = [];\n  disgustedValues = [];\n  fearfulValues = [];\n  happyValues = [];\n  neutralValues = [];\n  sadValues = [];\n  surprisedValues = [];\n  ageValues = [];\n  genderValues = [];\n\n  // DETECTS THE EXACT GENDER\n  maleCount = 0;\n  femaleCount = 0;\n\n  exactGender = gender => {\n    gender &&\n      gender.forEach(x => {\n        if (x === \"male\") {\n          this.maleCount++;\n        } else if (x === \"female\") {\n          this.femaleCount++;\n        }\n      });\n    if (this.maleCount > this.femaleCount) {\n      return \"male\";\n    } else if (this.femaleCount > this.maleCount) {\n      return \"female\";\n    } else {\n      return \"\";\n    }\n  };\n\n  // CALCULATE MAX AND AVG VALUES OF THE EMOTIONS ---- GENDER ---- AGE AVG\n  MaxAndAvg = () => {\n    return {\n      angryMaxValue: Math.max(...this.angryValues),\n      disgustedMaxValue: Math.max(...this.disgustedValues),\n      fearfulMaxValue: Math.max(...this.fearfulValues),\n      happyMaxValue: Math.max(...this.happyValues),\n      neutralMaxValue: Math.max(...this.neutralValues),\n      sadMaxValue: Math.max(...this.sadValues),\n      surprisedMaxValue: Math.max(...this.surprisedValues),\n      angryAvgValue: median(this.angryValues),\n      // this.angryValues.reduce((x, y) => x + y, 0) / this.angryValues.length,\n      disgustedAvgValue: median(this.disgustedValues),\n      // this.disgustedValues.reduce((x, y) => x + y, 0) /\n      // this.disgustedValues.length,\n      fearfulAvgValue: median(this.fearfulValues),\n      // this.fearfulValues.reduce((x, y) => x + y, 0) /\n      // this.fearfulValues.length,\n      happyAvgValue: median(this.happyValues),\n      // this.happyValues.reduce((x, y) => x + y, 0) / this.happyValues.length,\n      neutralAvgValue: median(this.neutralValues),\n      // this.neutralValues.reduce((x, y) => x + y, 0) /\n      // this.neutralValues.length,\n      sadAvgValue: median(this.sadValues),\n      // this.sadValues.reduce((x, y) => x + y, 0) / this.sadValues.length,\n      surprisedAvgValue: median(this.surprisedValues),\n      // this.surprisedValues.reduce((x, y) => x + y, 0) /\n      // this.surprisedValues.length,2\n      age: median(this.ageValues),\n      ageArray: this.ageValues,\n      // mostOccurredAge: this.exactAge(this.ageValues),\n      // this.ageValues.reduce((x, y) => x + y, 0) / this.ageValues.length,\n      // gender: this.genderValues[10],\n      gender: this.exactGender(this.genderValues),\n      genderArray: this.genderValues,\n      maleNum: this.maleCount,\n      femaleNum: this.femaleCount,\n      time: this.timeElapsed\n    };\n  };\n\n  // variable for detection, to stop the detection when the component is unmounted\n  myDetection = 0;\n\n  // stop all the webcams\n  webcam = () => {\n    const video = document.getElementById(\"video\");\n    navigator.getUserMedia(\n      { video: {} },\n      stream =>\n        (video.srcObject = stream.getVideoTracks().forEach(x => x.stop())),\n      err => console.error(err)\n    );\n  };\n\n  //__________________________Face API________________________//\n  faceApi = () => {\n    const video = document.getElementById(\"video\");\n\n    //Load Neural Networks models\n    Promise.all([\n      faceapi.nets.tinyFaceDetector.loadFromUri(\"/assets\"),\n      faceapi.nets.faceLandmark68Net.loadFromUri(\"/assets\"),\n      faceapi.nets.faceRecognitionNet.loadFromUri(\"/assets\"),\n      faceapi.nets.faceExpressionNet.loadFromUri(\"/assets\"),\n      faceapi.nets.ageGenderNet.loadFromUri(\"/assets\")\n    ]).then(startVideo);\n\n    // start webcam\n    // JUST WAIT A BIT: THE CAMERA IS OFF, BUT THE LED WILL STAY ON FOR A FEW SECs\n    function startVideo() {\n      navigator.getUserMedia(\n        { video: {} },\n        stream => (video.srcObject = stream),\n        err => console.error(err)\n      );\n    }\n\n    // append canvas on the video tag for the skeleton\n    video.addEventListener(\"play\", async () => {\n      const canvas = await faceapi.createCanvasFromMedia(video);\n      document.body.append(canvas);\n      const displaySize = { width: video.width, height: video.height };\n      await faceapi.matchDimensions(canvas, displaySize);\n      console.log(\"WEBCAM LOADED\");\n\n      this.myDetection = setInterval(async () => {\n        const detections = await faceapi\n          .detectAllFaces(video, new faceapi.TinyFaceDetectorOptions())\n          .withFaceLandmarks()\n          .withFaceExpressions()\n          .withAgeAndGender()\n          .withFaceDescriptors();\n\n        if (detections[0] === undefined) {\n          console.log(\"DETECTION FAILED... \");\n        } else if (detections[0].expressions) {\n          console.log(\"STORING EMOTIONS...\");\n          if (detections[0].expressions.angry) {\n            // console.log(\"angry: \", detections[0].expressions.angry.toFixed(4));\n            //store ANGRY values in the array angryValues\n            this.angryValues.push(detections[0].expressions.angry);\n          }\n          if (detections[0].expressions.disgusted) {\n            // console.log(\"disgusted: \", detections[0].expressions.disgusted);\n            //store DISGUSTED values in the array disgustedValues\n            this.disgustedValues.push(detections[0].expressions.disgusted);\n          }\n          if (detections[0].expressions.fearful) {\n            // console.log(\"fearful: \", detections[0].expressions.fearful);\n            //store FEARFUL values in the array fearfulValues\n            this.fearfulValues.push(detections[0].expressions.fearful);\n          }\n          if (detections[0].expressions.happy) {\n            // console.log(\"happy: \", detections[0].expressions.happy);\n            //store HAPPY values in the array happyValues\n            this.happyValues.push(detections[0].expressions.happy);\n          }\n          if (detections[0].expressions.neutral) {\n            // console.log(\"neutral: \", detections[0].expressions.neutral);\n            //store NEUTRAL values in the array neutralValues\n            this.neutralValues.push(detections[0].expressions.neutral);\n          }\n          if (detections[0].expressions.sad) {\n            // console.log(\"sad: \", detections[0].expressions.sad);\n            //store SAD values in the array sadValues\n            this.sadValues.push(detections[0].expressions.sad);\n          }\n          if (detections[0].expressions.surprised) {\n            // console.log(\"surprised: \", detections[0].expressions.surprised);\n            //store SURPRISED values in the array surprisedValues\n            this.surprisedValues.push(detections[0].expressions.surprised);\n          }\n          // console.log(\"age: \", detections[0].age);\n          this.ageValues.push(detections[0].age);\n          // console.log(\"gender: \", detections[0].gender);\n          this.genderValues.push(detections[0].gender);\n        }\n      }, 100);\n    });\n  };\n  //__________________________________________________________//\n\n  //////////////////////COMPONENTS-MOUNT////////////////////////\n  componentDidMount = () => {\n    this.timeSession();\n    this.faceApi();\n    //TAB FOCUS\n    document.addEventListener(\n      visibilityChange,\n      this.handleVisibilityChange,\n      false\n    );\n  };\n  //_____________________________________________________________\n\n  //////////////////////COMPONENTS-UNMOUNT////////////////////////\n  componentWillUnmount = () => {\n    // TAB FOCUS\n    document.removeEventListener(visibilityChange, this.handleVisibilityChange);\n\n    this.timeSession();\n    this.timeSessionCalculation();\n    this.dataManager();\n  };\n  //______________________________________________________________\n\n  ///////////////////////////RENDER///////////////////////////////\n  render() {\n    //CHECK THE FOCUS OF THE TAB AND EITHER SEND DATA TO DB OR RESTART DETECTION\n    if (this.state.actions[this.state.actions.length - 1] === \"hide\") {\n      console.log(\"TAB FOCUS IS HIDDEN\");\n      this.timeSession();\n      this.timeSessionCalculation();\n      this.dataManager();\n    } else if (this.state.actions[this.state.actions.length - 1] === \"show\") {\n      this.timeElapsed = [];\n      this.timeSession();\n      this.faceApi();\n    }\n    return (\n      <div class=\"faceApi\">\n        <Beforeunload\n          onBeforeunload={() => {\n            console.log(\"DISPLAY PROPS: ----\", this.props);\n            this.timeSession();\n            this.timeSessionCalculation();\n            this.dataManager();\n            return false;\n          }}\n        />\n        <video\n          // ref={this.videoTag}\n          id=\"video\"\n          width=\"720\"\n          height=\"560\"\n          autoPlay\n          muted\n        ></video>\n        {/* <button\n          onClick={() => {\n            this.setState(this.MaxAndAvg());\n            // console.log(\"ANGRYVALUES\", this.angryValues);\n            console.log(\"STATE DURING THE SESSION -----------\", this.state);\n          }}\n        >\n          CHECK STATE\n        </button> */}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FaceApi from \"../face-api/FaceApi\";\nimport ReactPlayer from \"react-player\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\n// Written in a functional component. Same as below.\n\nconst DisplayPost = props => {\n  const video = props.contentType === \"video\";\n  const audio = props.contentType === \"audio\";\n  const image = props.contentType === \"image\";\n\n  return (\n    <>\n      <div>\n        {image && <img src={props.urlPath} />}\n        {video && (\n          <div className=\"videoPlayer\">\n            <div className=\"embed-responsive\">\n              <ReactPlayer url={props.urlPath} controls={true} />\n            </div>\n          </div>\n        )}\n        {audio && <ReactAudioPlayer src={props.urlPath} controls />}\n        <br />\n        HERE {props.views} views\n        <br />\n        <Link to={`/u/${props.owner}`}>Check the creator's page</Link>\n        <FaceApi id={props.viewId} />\n      </div>\n    </>\n  );\n};\n\nexport default DisplayPost;\n\n// export default class DisplayPost extends Component {\n//   // componentDidMount = () => {\n//   //   this.props.newView();\n//   // };\n//   // console.log(this.props)\n\n//   render() {\n//     console.log(\"LOOK HERE NOW MOFO\", this.props);\n//     return (\n//       <div>\n//         <ReactPlayer url={\"https://www.youtube.com/watch?v=8kOiLadbzpM\"} />\n//         <br />\n//         HERE {this.props.views} views\n//         <br />\n//         <Link to={`/u/${this.props.owner}`}>Check the creator's page</Link>\n//         <h1>{this.props.title}</h1>\n//         <h3>{this.props.owner}</h3>\n//         {this.props.body}\n//         <FaceApi id={this.props.id} />\n//       </div>\n//     );\n//   }\n// }\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DisplayPost from \"./DisplayPost\";\n\nconst Post = props => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [contentId, setContentId] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [ownerId, setOwnerId] = useState(\"\");\n  const [viewId, setViewId] = useState(\"\");\n  const [viewTotal, setViewTotal] = useState(0);\n  const [urlPath, setUrlPath] = useState(\"\");\n  const [contentType, setContentType] = useState(\"\");\n\n  // const getPostData = () => {\n  //    axios.get(`/u / api / ${ user } /${contentId}`).then(response => {\n  //   const newId = response.data._id;\n  //   const owner = response.data.owner.username;\n  //   const ownerId = response.data.owner._id;\n  //   const viewTotal = response.data.views.length;\n  //   const { title, body } = response.data;\n  //   axios.post(`/api/views/${newId}`).then(created => {\n  //     const viewId = created.data._id;\n  //     setBody(body);\n  //     setTitle(title);\n  //     setOwner(owner);\n  //     setOwnerId(ownerId);\n  //     setViewId(viewId);\n  //     setContentId(newId);\n  //     setViewTotal(viewTotal);\n  //   });\n  // });\n  // };\n\n  useEffect(() => {\n    // getPostData(); Same thing as the function above. Everything written here to stop watning\n    const { user } = props.match.params;\n    const contentId = props.match.params.id;\n    axios.get(`/u/api/${user}/${contentId}`).then(response => {\n      const newId = response.data._id;\n      const owner = response.data.owner.username;\n      const ownerId = response.data.owner._id;\n      const viewTotal = response.data.views.length;\n      const { title, body, contentType, urlPath } = response.data;\n\n      axios.post(`/api/views/${newId}`).then(created => {\n        const viewId = created.data._id;\n        setBody(body);\n        setTitle(title);\n        setOwner(owner);\n        setOwnerId(ownerId);\n        setViewId(viewId);\n        setContentId(newId);\n        setViewTotal(viewTotal);\n        setContentType(contentType);\n        setUrlPath(urlPath);\n      });\n    });\n  }, []);\n\n  const state = {\n    title,\n    body,\n    contentId,\n    owner,\n    ownerId,\n    viewId,\n    viewTotal,\n    contentType,\n    urlPath\n  };\n\n  return (\n    <div>\n      {/* <h1>{contentType}</h1>\n      <br />\n      <h1>#of Views {viewTotal}</h1>\n      <h1>{title} </h1>\n      <h2>{body}</h2>\n      <h3>CONTENT ID: {contentId}</h3>\n      <h4>OWNER: {owner} </h4>\n      <h5>OWNERID: {ownerId} </h5>\n      <h6>viewID: {viewId} </h6> */}\n\n      <DisplayPost {...state} />\n    </div>\n  );\n};\n\nexport default Post;\n\n// export default class Post extends Component {\n//   state = {\n//     title: \"\",\n//     body: \"\",\n//     id: \"\",\n//     owner: \"\",\n//     ownerId: \"\",\n//     views: 0\n//   };\n\n//   componentDidMount = () => {\n//     this.getPostData();\n//   };\n\n//   getPostData = () => {\n//     const { user, id } = this.props.match.params;\n//     console.log(id);\n//     axios.get(`/u/api/${user}/${id}`).then(response => {\n//       const views = response.data.views + 1;\n//       const newId = response.data._id;\n\n//       axios.put(`/u/api/views/${newId}`, { views }).then(response => {\n//         console.log(\"PUT REQUEST NOW\", response.data);\n//         const owner = response.data.owner.username;\n//         const ownerId = response.data.owner._id;\n//         const { title, body } = response.data;\n//         this.setState({\n//           title,\n//           body,\n//           owner,\n//           ownerId,\n//           views: response.data.views\n//         });\n//       });\n\n//       this.setState({\n//         views\n//       });\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <DisplayPost newView={this.newView} {...this.state} />\n\n//         <DisplayPost {...this.state} />\n//         {/* Here To add the FaceDetection */}\n//         <ReactPlayer url={\"https://www.youtube.com/watch?v=8kOiLadbzpM\"} />\n//       </div>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst UserCard = props => {\n  return (\n    <div className='contentCard'>\n      <h2>{props.content.title}</h2>\n      <h4>{props.content.date}</h4>\n      <button>\n        <Link to={`/u/${props.user}/${props.content._id}`}>View</Link>\n      </button>\n    </div>\n  );\n};\n\nexport default UserCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport UserCard from \"./UserCard\";\n\n// WRITTEN IN HOOKS. SAME AS BELOW\n\nconst CreatorPage = props => {\n  const [content, setContent] = useState([]);\n  const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    // getData() same thing as below. useEffect gives out a warning\n    const { user } = props.match.params;\n    axios.get(`/u/api/${user}`).then(contentArr => {\n      const contentData = contentArr.data;\n      setContent(contentData);\n      setUser(user);\n    });\n  }, []);\n\n  // const getData =() => {\n  //    const { user } = props.match.params;\n  //    axios.get(`/u/api/${user}`).then(contentArr => {\n  //      console.log(contentArr.data);\n  //      const contentData = contentArr.data;\n  //      setContent(contentData);\n  //      setUser(user);\n  //    });\n  // }\n\n  return (\n    <>\n      {content.reverse().map(el => {\n        return <UserCard content={el} key={el._id} user={user} />;\n      })}\n    </>\n  );\n};\n\nexport default CreatorPage;\n\n// export default class CreatorPage extends Component {\n//   state = {\n//     content: [],\n//     user: \"\"\n//   };\n\n//   componentDidMount = () => {\n//     console.log(\"Mounted\");\n//     this.getData();\n//   };\n\n//   getData = () => {\n//     // console.log(this.props.match.params);\n//     const { user } = this.props.match.params;\n//     axios.get(`/u/api/${user}`).then(contentArr => {\n//       this.setState({\n//         content: contentArr.data,\n//         user\n//       });\n//     });\n//   };\n\n//   render() {\n//     console.log(\"André\", this.state);\n//     return (\n//       <>\n//         {this.state.content.reverse().map(el => {\n//           return <UserCard content={el} key={el._id} user={this.state.user} />;\n//         })}\n//       </>\n//     );\n//   }\n// }\n","import React, {Component} from \"react\";\nimport {Bar} from \"react-chartjs-2\";\nimport axios from \"axios\"\nexport default class Chart extends Component{\n   \n      \n\n        getDato(){\n            const {user} =this.props.match.params\n            axios.get(`http://localhost:5005/api/chart/${user}`).then(response=>{\n                const viewsData=response.data.map(el=>{\n                     return el.views;\n                    })\n               console.log(\"Conten info!!! \",viewsData)\n               const allAvg=[];\n               \n               viewsData.forEach((elem,index)=>{\n                   elem.forEach((el,index)=>{\n                       allAvg.push(el.averageEmotion)\n                   })\n               })\n               let neutralityArr=[];\n               allAvg.forEach((elem,index)=>{\n                   neutralityArr.push(elem.neutralAvg)\n               })\n               let sumNet=neutralityArr.reduce((acum,val)=>{\n                   return acum+=val;\n               },0)\n               let emotionalImpact=(100-(sumNet/neutralityArr.length)).toFixed(2);\n               console.log(emotionalImpact);\n               console.log(neutralityArr)\n\n               function getEmotion(emotion){\n                //    for (let i=0;i<allAvg.length;i++){\n                //        console.log(allAvg[i])\n                //    }\n\n                  const emotionArr= allAvg.reduce((acc,curr)=>{\n                    if(curr && curr[emotion]) acc++\n                    return acc\n                  } ,0)\n                   return emotionArr\n            }\n            let ageAverage=[];\n            console.log(\"Hola!! \", viewsData)\n            viewsData.forEach((elem,index)=>{\n                elem.forEach(el=>{\n                    ageAverage.push(el.age);\n                })\n            })\n            let sum=ageAverage.reduce((acum,elem)=>{\n                return acum+=elem;\n                 ;\n            },0);\n\n\n            let genderArr=[];\n            \n            viewsData.forEach((elem,index)=>{\n                elem.forEach(el=>{\n                    genderArr.push(el.gender);\n                })\n            })\n            let male=genderArr.filter(el=>{\n                if (el===\"male\")return el;\n            })\n            const malePercent=(male.length/genderArr.length*100).toFixed(2);\n            const femalePercent=((genderArr.length-male.length)/genderArr.length*100).toFixed(2)\n            const views=genderArr.length;\n            \n            const age=Math.floor(sum/ageAverage.length)\n            const emotionsCount={\n                angry:getEmotion(\"angryAvg\"),\n                disgusted:getEmotion(\"disgustedAvg\"),\n                fearful:getEmotion(\"fearfulAvg\"),\n                happy:getEmotion(\"happyAvg\"),\n                sad:getEmotion(\"sadAvg\"),\n                surprised:getEmotion(\"surprisedAvg\")\n           }\n           console.log(emotionsCount)\n           \n         \n\n                \n        \n        \n        })     \n        }\n    \n        render(){\n            console.log(this.props.content)\n            // this.getDato();\n            return(<div>\n<h4>Number of views {this.props.content.views.length} </h4>\n<h1>Hello</h1>\n            </div>\n                // <div className=\"chart\">\n                //    content name\n                //    neutrality\n                //    views.\n                //    type of\n                //    Avg time\n                    \n                  \n                // </div>\n            )\n\n        }\n\n    }\n\n","import React, {Component} from \"react\";\nimport {Bar} from \"react-chartjs-2\";\nimport axios from \"axios\"\nimport ContentInfo from \"./ContentInfo\"\nexport default class Chart extends Component{\n   \n        state={\n            chartData:{},\n            emotionalImpact:0,\n            malePercent:0,\n            femalePercent:0,\n            age:0,\n            views:0,\n            content : []\n            \n        }\ncomponentDidMount=()=>{\n    this.getData()\n}\n        getData(){\n            const {user} =this.props.match.params\n            axios.get(`http://localhost:5005/api/chart/all/${user}`).then(response=>{\n                const allContent = response.data\n                const viewsArr=[];\n                const viewsData=response.data.map(el=>{\n                     return el.views;\n                    })\n                viewsData.forEach(elem=>{\n                    elem.forEach(el=>{\n                        viewsArr.push(el);\n                    })\n                })\n                const averageEmotion=  viewsArr.map(el=>{\n                    return el.averageEmotion;\n                 })\n                const maxEmotion=viewsArr.map(el=>{\n                    return el.maxEmotion;\n                 })\n\n\n                function getEmotion(emotion){\n                   const sum= averageEmotion.reduce((acum,value)=>{\n                        if(value && value[emotion]){\n                             acum++;\n                        }\n                        return acum\n                    },0)\n                    return sum;\n                }\n          \n\n               function getAverage(array){\n                let sum = array.reduce((previous, current) => current += previous);\n                 let avg = sum / array.length;\n                 return avg;\n               }\n               \n             let neutralityArr=[];\n              averageEmotion.forEach((elem)=>{\n                  neutralityArr.push(elem.neutralAvg)\n              })\n            let emotionalImpact=(100-getAverage(neutralityArr)).toFixed(2)\n            let ageAverage=[]\n            viewsArr.forEach((elem)=>{\n                    ageAverage.push(elem.age);\n            })\n            let age=Math.floor(getAverage(ageAverage));\n\n           \n\n            let genderArr=[];\n            viewsArr.forEach((elem)=>{\n                \n                    genderArr.push(elem.gender);\n                \n            })\n            let male=genderArr.filter(el=>{\n                 if (el===\"male\")return el;\n             })\n            const malePercent=(male.length/genderArr.length*100).toFixed(2);\n             const femalePercent=((genderArr.length-male.length)/genderArr.length*100).toFixed(2)\n            const views=viewsArr.length;\n\n            const emotionsCount={\n                angry:getEmotion(\"angryAvg\"),\n                disgusted:getEmotion(\"disgustedAvg\"),\n                fearful:getEmotion(\"fearfulAvg\"),\n                happy:getEmotion(\"happyAvg\"),\n                sad:getEmotion(\"sadAvg\"),\n                surprised:getEmotion(\"surprisedAvg\")\n           }\n           \n          const chartData = {\n            labels:[\"Angry\", 'Disgusted', 'Fearful', 'Happy', 'Sad', 'Surprised'],\n            datasets:[{\n                label:\"Emotions detected\",\n                data:[\n                        emotionsCount.angry,\n                        emotionsCount.disgusted,\n                        emotionsCount.fearful,\n                        emotionsCount.happy,\n                        emotionsCount.sad,\n                        emotionsCount.surprised\n                ],\n                backgroundColor:[\n                    'rgba(255, 95, 132, 0.6)',\n                    'rgba(54, 162, 235, 0.6)',\n                    'rgba(255, 206, 86, 0.6)',\n                    'rgba(75, 192, 192, 0.6)',\n                    'rgba(153, 102, 255, 0.6)',\n                    'rgba(255, 159, 64, 0.6)',\n                    'rgba(255, 99, 132, 0.6)'\n                ]\n            }]\n        }\n    \n\n           this.setState({\n             chartData,\n             age,\n             femalePercent,\n             malePercent,\n            emotionalImpact,\n            views,\n            //    content: allContent\n            \n           })\n                \n        \n        \n        })     \n        }\n    \n        render(){\n            console.log(this.state.content)\n            return(\n                <div className=\"chart\">\n                    <Bar\n                        data={this.state.chartData}\n                        options={{ maintainAspectRatio: false }}\n                        />\n                   \n                    <div style={{display: \"flex\", justifyContent:\"space-around\"}}>\n                    <h5>Emotional Impact: {this.state.emotionalImpact}%</h5>\n                    <h5>Average Age: {this.state.age}  </h5>\n                    <h5>Male:{this.state.malePercent}%</h5>\n                    <h5>Female:{this.state.femalePercent}%</h5>\n                    <h5>Total views:{this.state.views}</h5>\n                    </div>\n                    {this.state.content.map(el => {\n                        return <ContentInfo content={el} />\n                    })}\n                    {/* <ContentInfo user={this.props.match.params.user}/> */}\n                  \n                </div>\n            )\n        }\n}\n","import React from \"react\";\n// import {\n//   MDBContainer,\n//   MDBRow,\n//   MDBCol,\n//   MDBBtn,\n//   MDBCard,\n//   MDBCardBody,\n//   MDBInput,\n//   MDBLabel\n// } from \"mdbreact\";\nimport \"../App.css\";\n\nconst Header = () => {\n  return (\n    <>\n      {/* <h1 className=\" text-center logIn\"> Welcome to </h1> */}\n      <img className=\"motusHeader logIn\" src=\"motus-header.png\" />\n\n      <iframe\n        style={{ pointerEvents: \"none\" }}\n        src=\"https://giphy.com/embed/KD1vTHZYe5l8TcPZHo\"\n        width=\"480\"\n        height=\"300\"\n        frameBorder=\"0\"\n        className=\" motusHeader giphy-embed\"\n        allowFullScreen\n      ></iframe>\n      <p style={{ fontSize: \"2rem\" }} className=\"motusHeader\">\n        the app that makes analitics of a content in terms of user's emotions,\n        age, gender and time spent on a page\n      </p>\n    </>\n  );\n};\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\n\nconst EditProfile = ({ setUser, handleSubmit, onImageUpload, user }) => {\n  console.log(user);\n  return (\n    // <form onSubmit={handleSubmit}>\n    //   <label htmlFor='fullName'>Name</label>\n    //   <input\n    //     type='text'\n    //     name='fullName'\n    //     id='fullName'\n    //     value={user.fullName}\n    //     onChange={e => setUser({ ...user, [e.target.name]: e.target.value })}\n    //   />\n    //   <label htmlFor='username'>Username</label>\n    //   <input\n    //     type='text'\n    //     name='username'\n    //     id='username'\n    //     value={user.username}\n    //     onChange={e => setUser({ ...user, [e.target.name]: e.target.value })}\n    //   />\n    //   <label htmlFor='oldPasswordTest'>Old Password</label>\n    //   <input\n    //     type='password'\n    //     name='oldPasswordTest'\n    //     id='oldPasswordTest'\n    //     value={user.oldPasswordTest}\n    //     onChange={e => setUser({ ...user, [e.target.name]: e.target.value })}\n    //   />\n    //   <label htmlFor='newPasswordTest'>Password</label>\n    //   <input\n    //     type='password'\n    //     name='newPasswordTest'\n    //     id='newPasswordTest'\n    //     value={user.newPasswordTest}\n    //     onChange={e => setUser({ ...user, [e.target.name]: e.target.value })}\n    //   />\n    //   <label htmlFor='file'>Profile Picture</label>\n    //   <input\n    //     type='file'\n    //     name='profilePicture'\n    //     id='profilePicture'\n    //     onChange={onImageUpload}\n    //   />\n    //   <button type='submit'>Submit your changes</button>\n    // </form>\n    <MDBContainer>\n      <MDBRow>\n        <MDBCol>\n          <form onSubmit={handleSubmit}>\n            {/* <label htmlFor=\"fullName\">Name</label> */}\n            <MDBInput\n              label=\"name\"\n              type=\"text\"\n              name=\"fullName\"\n              id=\"fullName\"\n              value={user.fullName}\n              onChange={e =>\n                setUser({ ...user, [e.target.name]: e.target.value })\n              }\n            />\n            {/* <label htmlFor=\"username\">Username</label> */}\n            <MDBInput\n              label=\"username\"\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              value={user.username}\n              onChange={e =>\n                setUser({ ...user, [e.target.name]: e.target.value })\n              }\n            />\n            {/* <label htmlFor=\"oldPasswordTest\">Old Password</label> */}\n            <MDBInput\n              label=\"oldpassword\"\n              type=\"password\"\n              name=\"oldPasswordTest\"\n              id=\"oldPasswordTest\"\n              value={user.oldPasswordTest}\n              onChange={e =>\n                setUser({ ...user, [e.target.name]: e.target.value })\n              }\n            />\n            {/* <label htmlFor=\"newPasswordTest\">Password</label> */}\n            <MDBInput\n              label=\"new password\"\n              type=\"password\"\n              name=\"newPasswordTest\"\n              id=\"newPasswordTest\"\n              value={user.newPasswordTest}\n              onChange={e =>\n                setUser({ ...user, [e.target.name]: e.target.value })\n              }\n            />\n            {/* <label htmlFor=\"file\">Profile Picture</label>\n            <input\n              type=\"file\"\n              name=\"profilePictureTest\"\n              id=\"profilePictureTest\"\n              onChange={onImageUpload}\n            /> */}\n            <div className=\"input-group\">\n              <div className=\"custom-file\">\n                <input\n                  type=\"file\"\n                  name=\"profilePictureTest\"\n                  id=\"profilePictureTest\"\n                  onChange={onImageUpload}\n                  className=\"custom-file-input\"\n                  aria-describedby=\"inputGroupFileAddon01\"\n                />\n                <label className=\"custom-file-label grey-text\" htmlFor=\"file\">\n                  choose file\n                </label>\n              </div>\n            </div>\n            <div className=\"text-center\">\n              <MDBBtn type=\"submit\">Save</MDBBtn>\n            </div>\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default EditProfile;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport EditProfile from \"./EditProfile\";\n\nconst Settings = ({ user: { _id }, history }) => {\n  console.log(_id);\n\n  // fullName: \"RootRoot\"\n  // password: \"$2b$10$cN33/c5k3SqGYLQbAIcg.ugPhr8oJAkNIH5fTq9zsidvOFz2aTU4a\"\n  // updated_at: \"2019-10-09T14:38:28.844Z\"\n  // username: \"rootroot\"\n  // __v: 0\n  // _id: \"5d9df0e4de23c3e652e51c0c\"\n  // __proto__: Object\n\n  // const [id, setId] = useState(\"\");\n  const [user, setUser] = useState({\n    fullName: \"\",\n    username: \"\",\n    profilePicture: \"\",\n    oldPasswordTest: \"\",\n    newPasswordTest: \"\"\n  });\n\n  const [clicked, setClicked] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  // const checkDatabase = () => {\n  //   axios.get(`/api/userSettings/${user._id}`).then(({ data }) => {\n  //     setFullName(data.fullName);\n  //     setUserName(data.username);\n  //     setOldPassword(data.password);\n  //   });\n  // };\n\n  useEffect(() => {\n    axios\n      .get(`/api/userSettings/${_id}`)\n      .then(({ data: { fullName, username } }) => {\n        setUser({ ...user, fullName, username });\n      });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(user);\n    axios\n      .put(`/api/userSettings/${_id}`, user)\n      .then(() => {\n        history.push(\"/content-dashboard\");\n      })\n      .catch(err => {\n        setMessage(err.response.data.message);\n      });\n  };\n\n  const onImageUpload = event => {\n    console.log(\"the file to be added is\", event.target.files[0]);\n\n    const files = event.target.files[0];\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append(\"profilePictureTest\", files);\n    axios.post(\"/api/userSettings/add/image\", uploadData).then(response => {\n      const profilePicture = response.data.secure_url;\n      setUser({ ...user, profilePicture });\n    });\n  };\n\n  return (\n    <div>\n      <h1 className=\" text-center mb-4 logIn\">Edit your profile</h1>\n      {/* <button onClick={checkDatabase}>Click for console.log</button> */}\n      {/* <h2>{user.username} </h2> */}\n      <EditProfile\n        setUser={setUser}\n        handleSubmit={handleSubmit}\n        onImageUpload={onImageUpload}\n        user={user}\n      />\n      <p style={{ textAlign: \"center\" }}>{message}</p>\n    </div>\n  );\n};\n\nexport default Settings;\n\n/* \n\n{_id: \"5d9df0e4de23c3e652e51c0c\", username: \"rootroot\", password: \"$2b$10$cN33/c5k3SqGYLQbAIcg.ugPhr8oJAkNIH5fTq9zsidvOFz2aTU4a\", fullName: \"RootRoot\", created_at: \"2019-10-09T14:38:28.844Z\", …}\ncreated_at: \"2019-10-09T14:38:28.844Z\"\nfullName: \"RootRoot\"\npassword: \"$2b$10$cN33/c5k3SqGYLQbAIcg.ugPhr8oJAkNIH5fTq9zsidvOFz2aTU4a\"\nupdated_at: \"2019-10-09T14:38:28.844Z\"\nusername: \"rootroot\"\n__v: 0\n_id: \"5d9df0e4de23c3e652e51c0c\"\n__proto__: Object\n\n*/\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Signup from \"./components/Signup\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport ContentManager from \"./components/Content-Dashboard/ContentManager\";\nimport AddContent from \"./components/Content-Dashboard/AddContent\";\nimport Post from \"./components/Post\";\nimport EditContent from \"./components/Content-Dashboard/EditContent\";\nimport DetectEmotion from \"./components/UserViews/DetectEmotion\";\nimport CreatorPage from \"./components/UserViews/CreatorPage\";\nimport Chart from \"./components/Chart\";\nimport Header from \"./components/Header\";\nimport Settings from \"./components/ProfileSettings/Settings\";\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user\n  };\n\n  setUser = user => {\n    this.setState({\n      user\n    });\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <Navbar user={this.state.user} setUser={this.setUser} />\n        <Switch>\n          {\" \"}\n          <Route\n            exact\n            path='/signup'\n            render={props => <Signup setUser={this.setUser} {...props} />}\n          />\n          <Route\n            exact\n            path='/login'\n            render={props => <Login setUser={this.setUser} {...props} />}\n          />\n          <Route\n            exact\n            path='/content-dashboard'\n            render={props => (\n              <ContentManager user={this.state.user} {...props} />\n            )}\n          />\n          <Route exact path='/content-dashboard/add' component={AddContent} />\n          <Route exact path='/content-dashboard/:unique' component={Post} />\n          <Route exact path='/edit/:editPost' component={EditContent} />\n          <Route exact path={\"/u/:user\"} component={CreatorPage} />\n          <Route exact path={`/u/:user/:id`} component={DetectEmotion} />\n          <Route exact path='/' component={Header} />\n          <Route\n            exact\n            path='/chart/:user'\n            render={props => <Chart user={this.state.user} {...props} />}\n          />\n          <Route\n            exact\n            path='/settings'\n            render={props => <Settings user={this.state.user} {...props} />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  // console.log(response.data);\n\n  const user = response.data;\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}